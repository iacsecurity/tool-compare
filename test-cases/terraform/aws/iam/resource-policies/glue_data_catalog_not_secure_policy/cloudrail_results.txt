
WARNINGs found:
Rule: Ensure S3 buckets are set to be encrypted at rest
Description: Cloudrail will review the S3 buckets in your environment. If an S3 bucket is not set to be encrypted at rest, and the bucket is not public, Cloudrail will highlight it as a violation.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html to enable S3 bucket encryption at rest.
Remediation Steps - Terraform: For the aws_s3_bucket resource, in server_side_encryption_configuration, rule, apply_server_side_encryption_by_default block, set sse_algorithm argument to an allowed value.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | The S3 Bucket aws_s3_bucket.cloudrail is not set to be encrypted at rest


-----------------------------------------------
Rule: Ensure S3 buckets have versioning enabled
Description: Using versioning is a good practice to deal with accidental deletion or modifications. Cloudrail will review your buckets to ensure versioning is enabled. This rule is not context aware
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html to enable S3 bucket versioning.
Remediation Steps - Terraform: For the aws_s3_bucket resource, in versioning block, set enabled argument to true.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | The S3 Bucket aws_s3_bucket.cloudrail does not have versioning enabled


-----------------------------------------------
Rule: Ensure use of S3 bucket policy, and no action wildcards are being used
Description: Using wildcard actions may inadvertently allow users to take actions you do not want to allow them to do. In addition, using a resource policy will provide an additional layer of security. It is a best practice to use a resource policy and give specific permissions only.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-policy-language-overview.html to modify S3 bucket policy in order to avoid using wildcard actions.
Remediation Steps - Terraform: For the aws_s3_bucket_policy resource, modify policy argument in order to avoid using wildcard actions.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | There is no resource policy or no statements attached to aws_s3_bucket.cloudrail


-----------------------------------------------
Rule: Ensure use of Glue data catalog policy, and no action wildcards are being used
Description: Using wildcard actions may inadvertently allow users to take actions you do not want to allow them to do. It is a best practice to give specific permissions only.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/glue/latest/dg/glue-resource-policies.html to modify the policy and ensure it is not using wildcard actions.
Remediation Steps - Terraform: For the aws_glue_resource_policy resource, ensure the attached policy does not contain wildcard actions.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_glue_catalog_table.cloudrail_table] (main.tf:9)
     Violating Resource: [aws_glue_resource_policy.example]  (main.tf:67)

     Evidence:
             | The Glue Data Catalog resource policy in region us-east-1 is using wildcard action glue:*, and principal AWS: *, without any condition


   - Exposed Resource: [aws_glue_crawler.cloudrail_table_crawler] (main.tf:38)
     Violating Resource: [aws_glue_resource_policy.example]  (main.tf:67)

     Evidence:
             | The Glue Data Catalog resource policy in region us-east-1 is using wildcard action glue:*, and principal AWS: *, without any condition


-----------------------------------------------
Rule: Enforce use of HTTPS in S3 bucket policy
Description: Access to objects in S3 should only be done via HTTPS. Blocking HTTP can be done by including a SecureTransport condition in the S3 bucketâ€™s policy.
Remediation Steps - Cloud Console: Follow the guide at https://aws.amazon.com/premiumsupport/knowledge-center/s3-bucket-policy-for-config-rule/ to create an S3 bucket policy that enforces the use of HTTPS.
Remediation Steps - Terraform: For the aws_s3_bucket_policy resource, ensure the policy denies all actions on the bucket and objects when the request meets the condition (aws:SecureTransport == false).
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | The S3 Bucket aws_s3_bucket.cloudrail does not have a policy with the aws:SecureTransport condition


-----------------------------------------------
Rule: Ensure all resources that can be tagged have at least one tag
Description: Some organizations require that all resources have at least one tag set. This rule will review the resources that can be tagged, and make sure each one has a tag that is not the Name tag. Resources that are not tagged will be flagged.
Remediation Steps - Cloud Console: Access the specific resource in the AWS console and add tags.
Remediation Steps - Terraform: Add a tags section to the resource with at least one tag beyond the Name tag.
 - 3 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | Resource S3 Bucket aws_s3_bucket.cloudrail does not have any tags set


   - Exposed Resource: [aws_glue_crawler.cloudrail_table_crawler] (main.tf:38)
     Violating Resource: [aws_glue_crawler.cloudrail_table_crawler]  (main.tf:38)

     Evidence:
             | Resource Glue crawler aws_glue_crawler.cloudrail_table_crawler does not have any tags set


   - Exposed Resource: [aws_iam_role.cloudrail_glue_iam] (main.tf:14)
     Violating Resource: [aws_iam_role.cloudrail_glue_iam]  (main.tf:14)

     Evidence:
             | Resource IAM Role aws_iam_role.cloudrail_glue_iam does not have any tags set


-----------------------------------------------
Rule: Ensure IAM policies pass Access Analyzer policy validation without WARNING and SUGGESTION issues
Description: Cloudrail will send all of your IAM policies to the AWS Access Analyzer for Policy Validation. Any issues found by Access Analyzer at the WARNING and SUGGESTION severities will be highlighted as issues by Cloudrail under this rule.
Remediation Steps - Cloud Console: Review the findings and correct them within the policy.
Remediation Steps - Terraform: Review the findings and correct them within the policy.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_glue_resource_policy.example] (main.tf:67)
     Violating Resource: [aws_glue_resource_policy.example]  (main.tf:67)

     Evidence:
         Line 1, Col 131:
             | Add a value to the empty string in the Sid element
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value


-----------------------------------------------
Rule: Ensure S3 bucket has access logging enabled
Description: Cloudrail will review the S3 buckets configuration in your environment. If a bucket does not have access logging enabled, Cloudrail will highlight it as a violation.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html in order to enable server access logging for an S3 bucket.
Remediation Steps - Terraform: For the aws_s3_bucket resource, set the logging block with target_bucket argument set to the name of an S3 bucket that will receive the log objects.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_s3_bucket.cloudrail] (main.tf:33)
     Violating Resource: [aws_s3_bucket.cloudrail]  (main.tf:33)

     Evidence:
             | The S3 Bucket aws_s3_bucket.cloudrail does not have access logging enabled


-----------------------------------------------

Cloudrail ran this assessment without any policies and so all rule violations show as warnings.
You can increase a rule's enforcement level by creating a Policy in the Web UI and adding the rule to it.