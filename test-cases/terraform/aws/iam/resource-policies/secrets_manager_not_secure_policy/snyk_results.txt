Failed to run the process ...
{
  "meta": {
    "isPrivate": true,
    "isLicensesEnabled": false,
    "ignoreSettings": null,
    "org": "ryder.d",
    "projectId": "",
    "policy": ""
  },
  "filesystemPolicy": false,
  "vulnerabilities": [],
  "dependencyCount": 0,
  "licensesPolicy": null,
  "ignoreSettings": null,
  "targetFile": "main.tf",
  "projectName": "project",
  "org": "ryder.d",
  "policy": "",
  "isPrivate": true,
  "targetFilePath": "/project/main.tf",
  "packageManager": "terraformconfig",
  "path": "/project",
  "projectType": "terraformconfig",
  "ok": false,
  "infrastructureAsCodeIssues": [
    {
      "severity": "low",
      "resolve": "Set `kms_key_id` attribute to customer managed key id",
      "id": "SNYK-CC-AWS-421",
      "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
      "msg": "resource.aws_secretsmanager_secret[not_secure_policy].kms_key_id",
      "remediation": {
        "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
        "terraform": "Set `kms_key_id` attribute to customer managed key id"
      },
      "subType": "Secrets Manager",
      "issue": "Secrets Manager is not encrypted with customer managed key",
      "publicId": "SNYK-CC-AWS-421",
      "title": "Secrets Manager is not encrypted with customer managed key",
      "references": [
        "https://docs.aws.amazon.com/kms/latest/developerguide/services-secrets-manager.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Secrets Manager is not encrypted with customer managed key",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `kms_key_id` attribute to customer managed key id"
      },
      "lineNumber": 5,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-421",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_secretsmanager_secret[not_secure_policy]",
        "kms_key_id"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Remove `*` values from `Action` in policy document. Add specific permissions only for example `secretsmanager:DescribeSecret`",
      "id": "SNYK-CC-AWS-434",
      "impact": "Wildcard permissions grant broad permissions. The best practice recommends to providing only required permissions explicitly",
      "msg": "resource.aws_secretsmanager_secret_policy[example].policy",
      "remediation": {
        "cloudformation": "Remove `*` values from `Action` in policy document. Add specific permissions only for example `secretsmanager:DescribeSecret`",
        "terraform": "Remove `*` values from `Action` in policy document. Add specific permissions only for example `secretsmanager:DescribeSecret`"
      },
      "subType": "Secrets Manager",
      "issue": "Wildcard action has been specified in policy",
      "publicId": "SNYK-CC-AWS-434",
      "title": "Wildcard action in SecretsManager access policy",
      "references": [
        "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret_policy",
        "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Wildcard action has been specified in policy",
        "impact": "Wildcard permissions grant broad permissions. The best practice recommends to providing only required permissions explicitly",
        "resolve": "Remove `*` values from `Action` in policy document. Add specific permissions only for example `secretsmanager:DescribeSecret`"
      },
      "lineNumber": 12,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-434",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_secretsmanager_secret_policy[example]",
        "policy"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `Principal` attribute in the policy to specific entities for example `arn:aws:iam::123456789012:user/JohnDoe`",
      "id": "SNYK-CC-AWS-433",
      "impact": "Using wild card will grant unnecessary access to any user in the account",
      "msg": "resource.aws_secretsmanager_secret_policy[example].policy",
      "remediation": {
        "cloudformation": "Set `Principal` attribute in the policy to specific entities for example `arn:aws:iam::123456789012:user/JohnDoe`",
        "terraform": "Set `Principal` attribute in the policy to specific entities for example `arn:aws:iam::123456789012:user/JohnDoe`"
      },
      "subType": "Secrets Manager",
      "issue": "Wildcard principal has been specified in access policy",
      "publicId": "SNYK-CC-AWS-433",
      "title": "Wildcard principal in SecretsManager access policy",
      "references": [
        "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret_policy",
        "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Wildcard principal has been specified in access policy",
        "impact": "Using wild card will grant unnecessary access to any user in the account",
        "resolve": "Set `Principal` attribute in the policy to specific entities for example `arn:aws:iam::123456789012:user/JohnDoe`"
      },
      "lineNumber": 12,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-433",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_secretsmanager_secret_policy[example]",
        "policy"
      ]
    }
  ]
}
