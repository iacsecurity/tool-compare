
WARNINGs found:
Rule: EC2(s) within the public and private subnets should not share identical IAM roles
Description: Having the same IAM role for both public and private instances may be dangerous. Someone may expand the permissions for the role in order to use it in a private workload, not realizing a public workload has the same privileges.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create.html to create an additional IAM role with an IAM role policy attached. Associate this role to the public EC2 instances.
Remediation Steps - Terraform: Create an additional aws_iam_role resource with an aws_iam_role_policy attached. Associate this role to the public EC2 instances using an aws_iam_instance_profile resource.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [aws_iam_role.test_role]  (main.tf:50)

     Evidence:
         Instance aws_instance.pub_ins
             | Instance is publicly exposed
             | Instance uses IAM role aws_iam_role.test_role
             | Private EC2 instance shares IAM role aws_iam_role.test_role as well
         Instance aws_instance.priv_ins


-----------------------------------------------
Rule: Ensure all used default security groups of every VPC restrict all traffic
Description: Using default security groups in general is inadvisable. By locking security groups down, you are validating that if anyone uses them by accident, they will realize before any security issues occur.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule to update the security group rules.
Remediation Steps - Terraform: For the resource aws_default_security_group, update the inline ingress and egress rules.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [module.vpc.aws_nat_gateway.this[1]] (.terraform/modules/vpc/main.tf:1096)
     Violating Resource: [module.vpc.aws_default_security_group.this[0]]  (.terraform/modules/vpc/main.tf:53)

     Evidence:
         VPC module.vpc.aws_vpc.this[0]
             | module.vpc.aws_nat_gateway.this[1] uses ENI eni-pseudo-3d619433-3963-4fff-bba5-f557b53a3613
             | The ENI is secured by default Security group module.vpc.aws_default_security_group.this[0] and allows all traffic


-----------------------------------------------
Rule: Ensure no used security groups allow ingress from 0.0.0.0/0 or ::/0 to port 22 (SSH)
Description: Exposing resources to the Internet is generally inadvisable, especially on a known port like 22 (SSH).
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#updating-security-group-rules to update the security group inbound rule. Set the Source parameter to a value other than 0.0.0.0/0 or ::/0 for the SSH port.
Remediation Steps - Terraform: For the resource aws_security_group, update in-line ingress rules or resource aws_security_group_rule to set cidr_blocks argument to a value other than 0.0.0.0/0 or ::/0 for the SSH port.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [module.vpc.aws_default_security_group.this[0]]  (.terraform/modules/vpc/main.tf:53)

     Evidence:
         Internet
             | Subnet module.vpc.aws_subnet.public[0] has internet gateway
             | Instance aws_instance.pub_ins is on module.vpc.aws_subnet.public[0]
             | Subnet routes traffic from instance to internet gateway
             | Subnet uses Network ACL's nacl-pseudo-d8b3d133-19ce-4fb1-aed4-e567231352a5 which allows port 22
             | Instance uses security group module.vpc.aws_default_security_group.this[0]
             | module.vpc.aws_default_security_group.this[0] allows port 22
         Instance


-----------------------------------------------
Rule: Ensure IMDSv2 is used and IMDSv1 is disabled
Description: There have been hacks in the past caused by the use of IMDSv1. It is now best practice to disable IMDSv1 and use IMDSv2. It’s important to test the disablement of IMDSv1 carefully, as it may cause issues in an application’s execution (if it using an old SDK, for example).
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html to change the instance metadata for existing instances. Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html to configure instance metadata for new instances.
Remediation Steps - Terraform: For the aws_instance resource, in metadata_options block, set http_tokens argument to required.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [aws_instance.priv_ins]  (main.tf:106)

     Evidence:
             | The EC2 Instance aws_instance.priv_ins is allowing IMDSv1


   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [aws_instance.pub_ins]  (main.tf:98)

     Evidence:
             | The EC2 Instance aws_instance.pub_ins is allowing IMDSv1


-----------------------------------------------
Rule: Allow only private AMIs to be used
Description: Some organizations may only allow the use of private AMIs. If this rule is enabled, any EC2 instance attempting to use a public AMI will be flagged.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instances-and-amis.html in order to terminate flagged EC2 instances and create new EC2 instance with an approved AMI.
Remediation Steps - Terraform: For the aws_instance resource, update the ami argument to set an approved AMI. Terraform will destroy and create new resources.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [ami-0b0ea68c435eb488d]  (Not found in TF)

     Evidence:
             | The EC2 Instance aws_instance.priv_ins uses AMI ami-0b0ea68c435eb488d, which is public


   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [ami-0b0ea68c435eb488d]  (Not found in TF)

     Evidence:
             | The EC2 Instance aws_instance.pub_ins uses AMI ami-0b0ea68c435eb488d, which is public


-----------------------------------------------
Rule: Ensure all security groups and rules have a description detailing the rule
Description: Cloudrail will review your security groups. If a security group is using a default description, or has a rule which does not include a description, this rule will trigger.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html to update the security group or security group rules description field.
Remediation Steps - Terraform: For the aws_security_group and aws_security_group_rule resources, set description argument with a proper value. Note, this will force the re-creation of the security group and all resources that depend on it. This is an AWS limitation.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [module.vpc.aws_default_security_group.this[0]] (.terraform/modules/vpc/main.tf:53)
     Violating Resource: [module.vpc.aws_default_security_group.this[0]]  (.terraform/modules/vpc/main.tf:53)

     Evidence:
             | The Security group module.vpc.aws_default_security_group.this[0] does not have a description for the ingress rule of 0.0.0.0/0 for ports 22:22 using protocol TCP


-----------------------------------------------
Rule: Ensure all resources that can be tagged have at least one tag
Description: Some organizations require that all resources have at least one tag set. This rule will review the resources that can be tagged, and make sure each one has a tag that is not the Name tag. Resources that are not tagged will be flagged.
Remediation Steps - Cloud Console: Access the specific resource in the AWS console and add tags.
Remediation Steps - Terraform: Add a tags section to the resource with at least one tag beyond the Name tag.
 - 23 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [module.vpc.aws_subnet.private[2]] (.terraform/modules/vpc/main.tf:405)
     Violating Resource: [module.vpc.aws_subnet.private[2]]  (.terraform/modules/vpc/main.tf:405)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.private[2] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_nat_gateway.this[1]] (.terraform/modules/vpc/main.tf:1096)
     Violating Resource: [module.vpc.aws_nat_gateway.this[1]]  (.terraform/modules/vpc/main.tf:1096)

     Evidence:
             | Resource NAT gateway module.vpc.aws_nat_gateway.this[1] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_eip.nat[0]] (.terraform/modules/vpc/main.tf:1078)
     Violating Resource: [module.vpc.aws_eip.nat[0]]  (.terraform/modules/vpc/main.tf:1078)

     Evidence:
             | Resource Elastic IP address module.vpc.aws_eip.nat[0] does not have any tags set other than "Name"


   - Exposed Resource: [aws_iam_instance_profile.test_profile] (main.tf:71)
     Violating Resource: [aws_iam_instance_profile.test_profile]  (main.tf:71)

     Evidence:
             | Resource IAM Instance profile aws_iam_instance_profile.test_profile does not have any tags set


   - Exposed Resource: [module.vpc.aws_nat_gateway.this[0]] (.terraform/modules/vpc/main.tf:1096)
     Violating Resource: [module.vpc.aws_nat_gateway.this[0]]  (.terraform/modules/vpc/main.tf:1096)

     Evidence:
             | Resource NAT gateway module.vpc.aws_nat_gateway.this[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_subnet.public[2]] (.terraform/modules/vpc/main.tf:376)
     Violating Resource: [module.vpc.aws_subnet.public[2]]  (.terraform/modules/vpc/main.tf:376)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.public[2] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_eip.nat[1]] (.terraform/modules/vpc/main.tf:1078)
     Violating Resource: [module.vpc.aws_eip.nat[1]]  (.terraform/modules/vpc/main.tf:1078)

     Evidence:
             | Resource Elastic IP address module.vpc.aws_eip.nat[1] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_subnet.public[1]] (.terraform/modules/vpc/main.tf:376)
     Violating Resource: [module.vpc.aws_subnet.public[1]]  (.terraform/modules/vpc/main.tf:376)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.public[1] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_subnet.public[0]] (.terraform/modules/vpc/main.tf:376)
     Violating Resource: [module.vpc.aws_subnet.public[0]]  (.terraform/modules/vpc/main.tf:376)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.public[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_route_table.public[0]] (.terraform/modules/vpc/main.tf:203)
     Violating Resource: [module.vpc.aws_route_table.public[0]]  (.terraform/modules/vpc/main.tf:203)

     Evidence:
             | Resource Route table module.vpc.aws_route_table.public[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_internet_gateway.this[0]] (.terraform/modules/vpc/main.tf:130)
     Violating Resource: [module.vpc.aws_internet_gateway.this[0]]  (.terraform/modules/vpc/main.tf:130)

     Evidence:
             | Resource Internet gateway module.vpc.aws_internet_gateway.this[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_route_table.private[1]] (.terraform/modules/vpc/main.tf:242)
     Violating Resource: [module.vpc.aws_route_table.private[1]]  (.terraform/modules/vpc/main.tf:242)

     Evidence:
             | Resource Route table module.vpc.aws_route_table.private[1] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_default_security_group.this[0]] (.terraform/modules/vpc/main.tf:53)
     Violating Resource: [module.vpc.aws_default_security_group.this[0]]  (.terraform/modules/vpc/main.tf:53)

     Evidence:
             | Resource Security group module.vpc.aws_default_security_group.this[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_route_table.private[2]] (.terraform/modules/vpc/main.tf:242)
     Violating Resource: [module.vpc.aws_route_table.private[2]]  (.terraform/modules/vpc/main.tf:242)

     Evidence:
             | Resource Route table module.vpc.aws_route_table.private[2] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_vpc.this[0]] (.terraform/modules/vpc/main.tf:25)
     Violating Resource: [module.vpc.aws_vpc.this[0]]  (.terraform/modules/vpc/main.tf:25)

     Evidence:
             | Resource VPC module.vpc.aws_vpc.this[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_eip.nat[2]] (.terraform/modules/vpc/main.tf:1078)
     Violating Resource: [module.vpc.aws_eip.nat[2]]  (.terraform/modules/vpc/main.tf:1078)

     Evidence:
             | Resource Elastic IP address module.vpc.aws_eip.nat[2] does not have any tags set other than "Name"


   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [aws_instance.pub_ins]  (main.tf:98)

     Evidence:
             | Resource EC2 Instance aws_instance.pub_ins does not have any tags set


   - Exposed Resource: [module.vpc.aws_route_table.private[0]] (.terraform/modules/vpc/main.tf:242)
     Violating Resource: [module.vpc.aws_route_table.private[0]]  (.terraform/modules/vpc/main.tf:242)

     Evidence:
             | Resource Route table module.vpc.aws_route_table.private[0] does not have any tags set other than "Name"


   - Exposed Resource: [module.vpc.aws_subnet.private[1]] (.terraform/modules/vpc/main.tf:405)
     Violating Resource: [module.vpc.aws_subnet.private[1]]  (.terraform/modules/vpc/main.tf:405)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.private[1] does not have any tags set other than "Name"


   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [aws_instance.priv_ins]  (main.tf:106)

     Evidence:
             | Resource EC2 Instance aws_instance.priv_ins does not have any tags set


   - Exposed Resource: [module.vpc.aws_subnet.private[0]] (.terraform/modules/vpc/main.tf:405)
     Violating Resource: [module.vpc.aws_subnet.private[0]]  (.terraform/modules/vpc/main.tf:405)

     Evidence:
             | Resource Subnet module.vpc.aws_subnet.private[0] does not have any tags set other than "Name"


   - Exposed Resource: [aws_iam_role.test_role] (main.tf:50)
     Violating Resource: [aws_iam_role.test_role]  (main.tf:50)

     Evidence:
             | Resource IAM Role aws_iam_role.test_role does not have any tags set


   - Exposed Resource: [module.vpc.aws_nat_gateway.this[2]] (.terraform/modules/vpc/main.tf:1096)
     Violating Resource: [module.vpc.aws_nat_gateway.this[2]]  (.terraform/modules/vpc/main.tf:1096)

     Evidence:
             | Resource NAT gateway module.vpc.aws_nat_gateway.this[2] does not have any tags set other than "Name"


-----------------------------------------------
Rule: Ensure IAM policies pass Access Analyzer policy validation without WARNING and SUGGESTION issues
Description: Cloudrail will send all of your IAM policies to the AWS Access Analyzer for Policy Validation. Any issues found by Access Analyzer at the WARNING and SUGGESTION severities will be highlighted as issues by Cloudrail under this rule.
Remediation Steps - Cloud Console: Review the findings and correct them within the policy.
Remediation Steps - Terraform: Review the findings and correct them within the policy.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role.test_role] (main.tf:50)
     Violating Resource: [aws_iam_role.test_role]  (main.tf:50)

     Evidence:
         Line 10, Col 13:
             | Add a value to the empty string in the Sid element
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value


-----------------------------------------------
Rule: Ensure EC2 instance is EBS optimized
Description: Cloudrail will review the EC2 instances configuration in your environment. If it is not configured to be EBS-optimized, Cloudrail will highlight it as a violation.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html to enable EBS optimization for an EC2 instance.
Remediation Steps - Terraform: For the aws_instance resource, set the ebs_optimized parameter to true.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [aws_instance.priv_ins]  (main.tf:106)

     Evidence:
             | The EC2 Instance aws_instance.priv_ins is not EBS optimized


   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [aws_instance.pub_ins]  (main.tf:98)

     Evidence:
             | The EC2 Instance aws_instance.pub_ins is not EBS optimized


-----------------------------------------------
Rule: Ensure EC2 instance has detailed monitoring enabled
Description: Cloudrail will review the EC2 instances configuration in your environment. If an instance does not have detailed monitoring configured, Cloudrail will highlight it as a violation.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html in order to enable detailed monitoring for an EC2 instance.
Remediation Steps - Terraform: For the aws_instance resource, set the monitoring argument to true.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_instance.priv_ins] (main.tf:106)
     Violating Resource: [aws_instance.priv_ins]  (main.tf:106)

     Evidence:
             | The EC2 Instance aws_instance.priv_ins has detailed monitoring disabled


   - Exposed Resource: [aws_instance.pub_ins] (main.tf:98)
     Violating Resource: [aws_instance.pub_ins]  (main.tf:98)

     Evidence:
             | The EC2 Instance aws_instance.pub_ins has detailed monitoring disabled


-----------------------------------------------

Cloudrail ran this assessment without any policies and so all rule violations show as warnings.
You can increase a rule's enforcement level by creating a Policy in the Web UI and adding the rule to it.