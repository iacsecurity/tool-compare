
WARNINGs found:
Rule: Disallow IAM permissions which can lead to privilege escalation
Description: When setting an IAM policy, one may inadvertently grant a permission which can later be used for privilege escalation. For example, by letting a user attach a policy to IAM entities, they can attach the policy to themselves, and escalate their permissions in the process. Cloudrail will look for policies in use that can create this loophole unintentionally and flag them. Cloudrail will only look at policies that are actually in use.
Remediation Steps - Cloud Console: Follow the guide at https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_create-console.html to update the IAM policy permissions.
Remediation Steps - Terraform: For the aws_iam_policy resource, set policy argument to use a policy with proper permissions.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role_policy.policy] (main.tf:25)
     Violating Resource: [aws_iam_role_policy.policy]  (main.tf:25)

     Evidence:
         aws_iam_role_policy.policy
             | is applied to arn:aws:iam::000000000000:role/role
             | granting the problematic permissions {'iam: AttachUser*', 'iam:*'} which can allow for privilege escalation


-----------------------------------------------
Rule: Ensure all resources that can be tagged have at least one tag
Description: Some organizations require that all resources have at least one tag set. This rule will review the resources that can be tagged, and make sure each one has a tag that is not the Name tag. Resources that are not tagged will be flagged.
Remediation Steps - Cloud Console: Access the specific resource in the AWS console and add tags.
Remediation Steps - Terraform: Add a tags section to the resource with at least one tag beyond the Name tag.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role.role] (main.tf:5)
     Violating Resource: [aws_iam_role.role]  (main.tf:5)

     Evidence:
             | Resource IAM Role aws_iam_role.role does not have any tags set


-----------------------------------------------
Rule: Ensure IAM policies pass Access Analyzer policy validation without WARNING and SUGGESTION issues
Description: Cloudrail will send all of your IAM policies to the AWS Access Analyzer for Policy Validation. Any issues found by Access Analyzer at the WARNING and SUGGESTION severities will be highlighted as issues by Cloudrail under this rule.
Remediation Steps - Cloud Console: Review the findings and correct them within the policy.
Remediation Steps - Terraform: Review the findings and correct them within the policy.
 - 2 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role.role] (main.tf:5)
     Violating Resource: [aws_iam_role.role]  (main.tf:5)

     Evidence:
         Line 10, Col 17:
             | Add a value to the empty string in the Sid element
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value


   - Exposed Resource: [aws_iam_role_policy.policy] (main.tf:25)
     Violating Resource: [aws_iam_role_policy.policy]  (main.tf:25)

     Evidence:
         Line 6, Col 8:
             | Using wildcards (*) in the action and the resource can allow creation of unintended service-linked roles because it allows iam:CreateServiceLinkedRole permissions on all resources
             | We recommend that you specify resource ARNs instead
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-action-and-resource


-----------------------------------------------
Rule: Ensure IAM policies pass Access Analyzer policy validation without SECURITY and ERROR issues
Description: Cloudrail will send all of your IAM policies to the AWS Access Analyzer for Policy Validation. Any issues found by Access Analyzer at the SECURITY and ERROR severities will be highlighted as issues by Cloudrail under this rule.
Remediation Steps - Cloud Console: Review the findings and correct them within the policy.
Remediation Steps - Terraform: Review the findings and correct them within the policy.
 - 1 Resources Exposed:
-----------------------------------------------
   - Exposed Resource: [aws_iam_role_policy.policy] (main.tf:25)
     Violating Resource: [aws_iam_role_policy.policy]  (main.tf:25)

     Evidence:
         Line 6, Col 8:
             | Using wildcards (*) in the action and the resource can be overly permissive because it allows iam:PassRole permissions on all resources
             | We recommend that you specify resource ARNs or add the iam:PassedToService condition key to your statement
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-action-and-resource
         Line 6, Col 17:
             | The action 'iam: AttachUser*' does not exist
             | See https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-action


-----------------------------------------------

Cloudrail ran this assessment without any policies and so all rule violations show as warnings.
You can increase a rule's enforcement level by creating a Policy in the Web UI and adding the rule to it.