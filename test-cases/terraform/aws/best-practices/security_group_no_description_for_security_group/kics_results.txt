
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    


Scanning with Keeping Infrastructure as Code Secure v1.3.1



Files scanned: 1
Parsed files: 1
Queries loaded: 559
Queries failed to execute: 0

------------------------------------

Security Group Without Description, Severity: INFO, Results: 1
Description: It's considered a best practice for AWS Security Group to have a description
Platform: Terraform

	[1]: /src/main.tf:15

		014: 
		015: resource "aws_security_group" "default" {
		016:   name        = "examplerulename"


Resource Not Using Tags, Severity: INFO, Results: 4
Description: AWS services resource tags are an essential part of managing components
Platform: Terraform

	[1]: /src/main.tf:17

		016:   name        = "examplerulename"
		017:   vpc_id      = aws_vpc.vpc.id
		018: 


	[2]: /src/main.tf:66

		065:   instance_type = "t2.micro"
		066:   subnet_id     = aws_subnet.subnet.id
		067:   vpc_security_group_ids  = [aws_security_group.default.id]


	[3]: /src/main.tf:63

		062: 
		063: resource "aws_instance" "ec2" {
		064:   ami = data.aws_ami.ubuntu.id


	[4]: /src/main.tf:35

		034: 
		035:   tags = {
		036:     Name = "example_rule_with_descriptions"


EC2 Not EBS Optimized, Severity: INFO, Results: 1
Description: It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance
Platform: Terraform

	[1]: /src/main.tf:63

		062: 
		063: resource "aws_instance" "ec2" {
		064:   ami = data.aws_ami.ubuntu.id


EC2 Instance Monitoring Disabled, Severity: INFO, Results: 1
Description: EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods
Platform: Terraform

	[1]: /src/main.tf:63

		062: 
		063: resource "aws_instance" "ec2" {
		064:   ami = data.aws_ami.ubuntu.id


VPC FlowLogs Disabled, Severity: MEDIUM, Results: 1
Description: VPC hasn't got any FlowLog associated
Platform: Terraform

	[1]: /src/main.tf:17

		016:   name        = "examplerulename"
		017:   vpc_id      = aws_vpc.vpc.id
		018: 


EC2 Instance Has Public IP, Severity: HIGH, Results: 1
Description: EC2 Instance should not have a public IP address.
Platform: Terraform

	[1]: /src/main.tf:63

		062: 
		063: resource "aws_instance" "ec2" {
		064:   ami = data.aws_ami.ubuntu.id



Results Summary:
HIGH: 1
MEDIUM: 1
LOW: 0
INFO: 7
TOTAL: 9

Scan duration: 3.902204998s
