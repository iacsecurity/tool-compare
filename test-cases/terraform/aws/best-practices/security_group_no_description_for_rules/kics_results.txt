
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    


Scanning with Keeping Infrastructure as Code Secure v1.4.9



Files scanned: 1
Parsed files: 1
Queries loaded: 851
Queries failed to execute: 0

------------------------------------

Security Group Without Description, Severity: INFO, Results: 1
Description: It's considered a best practice for AWS Security Group to have a description
Platform: Terraform

	[1]: ../../src/main.tf:15

		014: 
		015: resource "aws_security_group" "default" {
		016:   name        = "examplerulename"


Security Group Rules Without Description, Severity: INFO, Results: 2
Description: It's considered a best practice for all rules in AWS Security Group to have a description
Platform: Terraform

	[1]: ../../src/main.tf:26

		025: 
		026:   egress {
		027:     from_port   = 0


	[2]: ../../src/main.tf:19

		018: 
		019:   ingress {
		020:     from_port   = 443


Resource Not Using Tags, Severity: INFO, Results: 4
Description: AWS services resource tags are an essential part of managing components
Platform: Terraform

	[1]: ../../src/main.tf:10

		009: 
		010: resource "aws_vpc" "vpc" {
		011:   cidr_block = local.cidr_block


	[2]: ../../src/main.tf:33

		032: 
		033:   tags = {
		034:     Name = "example_rule_with_descriptions"


	[3]: ../../src/main.tf:38

		037: 
		038: resource "aws_subnet" "subnet" {
		039:   vpc_id     = aws_vpc.vpc.id


	[4]: ../../src/main.tf:61

		060: 
		061: resource "aws_instance" "ec2" {
		062:   ami = data.aws_ami.ubuntu.id


EC2 Not EBS Optimized, Severity: INFO, Results: 1
Description: It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance
Platform: Terraform

	[1]: ../../src/main.tf:61

		060: 
		061: resource "aws_instance" "ec2" {
		062:   ami = data.aws_ami.ubuntu.id


EC2 Instance Monitoring Disabled, Severity: INFO, Results: 1
Description: EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods
Platform: Terraform

	[1]: ../../src/main.tf:61

		060: 
		061: resource "aws_instance" "ec2" {
		062:   ami = data.aws_ami.ubuntu.id


EC2 Instance Using Default Security Group, Severity: LOW, Results: 1
Description: EC2 instances should not use default security group(s)
Platform: Terraform

	[1]: ../../src/main.tf:65

		064:   subnet_id     = aws_subnet.subnet.id
		065:   vpc_security_group_ids  = [aws_security_group.default.id]
		066: 


VPC Without Network Firewall, Severity: MEDIUM, Results: 1
Description: VPC should have a Network Firewall associated
Platform: Terraform

	[1]: ../../src/main.tf:10

		009: 
		010: resource "aws_vpc" "vpc" {
		011:   cidr_block = local.cidr_block


VPC FlowLogs Disabled, Severity: MEDIUM, Results: 1
Description: VPC hasn't got any FlowLog associated
Platform: Terraform

	[1]: ../../src/main.tf:10

		009: 
		010: resource "aws_vpc" "vpc" {
		011:   cidr_block = local.cidr_block


Sensitive Port Is Exposed To Wide Private Network, Severity: MEDIUM, Results: 1
Description: A sensitive port, such as port 23 or port 110, is open for a wide private network in either TCP or UDP protocol
Platform: Terraform

	[1]: ../../src/main.tf:19

		018: 
		019:   ingress {
		020:     from_port   = 443


EC2 Instance Has Public IP, Severity: HIGH, Results: 1
Description: EC2 Instance should not have a public IP address.
Platform: Terraform

	[1]: ../../src/main.tf:61

		060: 
		061: resource "aws_instance" "ec2" {
		062:   ami = data.aws_ami.ubuntu.id



Results Summary:
HIGH: 1
MEDIUM: 3
LOW: 1
INFO: 9
TOTAL: 14

Scan duration: 9.115369463s
