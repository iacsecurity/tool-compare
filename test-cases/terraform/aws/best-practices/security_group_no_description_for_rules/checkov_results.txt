terraform scan results:

Passed checks: 9, Failed checks: 8, Skipped checks: 0

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.default
	File: /main.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/networking_31

		15 | resource "aws_security_group" "default" {
		16 |   name        = "examplerulename"
		17 |   vpc_id      = aws_vpc.vpc.id
		18 | 
		19 |   ingress {
		20 |     from_port   = 443
		21 |     to_port     = 443
		22 |     protocol    = "tcp"
		23 |     cidr_blocks = ["10.0.0.0/24"]
		24 |   }
		25 | 
		26 |   egress {
		27 |     from_port   = 0
		28 |     to_port     = 0
		29 |     protocol    = "-1"
		30 |     cidr_blocks = ["0.0.0.0/0"]
		31 |   }
		32 | 
		33 |   tags = {
		34 |     Name = "example_rule_with_descriptions"
		35 |   }
		36 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.ec2
	File: /main.tf:61-67
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		61 | resource "aws_instance" "ec2" {
		62 |   ami = data.aws_ami.ubuntu.id
		63 |   instance_type = "t2.micro"
		64 |   subnet_id     = aws_subnet.subnet.id
		65 |   vpc_security_group_ids  = [aws_security_group.default.id]
		66 | 
		67 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.ec2
	File: /main.tf:61-67
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		61 | resource "aws_instance" "ec2" {
		62 |   ami = data.aws_ami.ubuntu.id
		63 |   instance_type = "t2.micro"
		64 |   subnet_id     = aws_subnet.subnet.id
		65 |   vpc_security_group_ids  = [aws_security_group.default.id]
		66 | 
		67 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.ec2
	File: /main.tf:61-67
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		61 | resource "aws_instance" "ec2" {
		62 |   ami = data.aws_ami.ubuntu.id
		63 |   instance_type = "t2.micro"
		64 |   subnet_id     = aws_subnet.subnet.id
		65 |   vpc_security_group_ids  = [aws_security_group.default.id]
		66 | 
		67 | }

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.ec2
	File: /main.tf:61-67
	Guide: https://docs.bridgecrew.io/docs/general_13

		61 | resource "aws_instance" "ec2" {
		62 |   ami = data.aws_ami.ubuntu.id
		63 |   instance_type = "t2.micro"
		64 |   subnet_id     = aws_subnet.subnet.id
		65 |   vpc_security_group_ids  = [aws_security_group.default.id]
		66 | 
		67 | }

Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	FAILED for resource: aws_instance.ec2
	File: /main.tf:61-67

		61 | resource "aws_instance" "ec2" {
		62 |   ami = data.aws_ami.ubuntu.id
		63 |   instance_type = "t2.micro"
		64 |   subnet_id     = aws_subnet.subnet.id
		65 |   vpc_security_group_ids  = [aws_security_group.default.id]
		66 | 
		67 | }

Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.vpc
	File: /main.tf:10-13
	Guide: https://docs.bridgecrew.io/docs/networking_4

		10 | resource "aws_vpc" "vpc" {
		11 |   cidr_block = local.cidr_block
		12 | 
		13 | }

Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.vpc
	File: /main.tf:10-13
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		10 | resource "aws_vpc" "vpc" {
		11 |   cidr_block = local.cidr_block
		12 | 
		13 | }


