[38;2;34;187;51m
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    

[0m
Scanning with Keeping Infrastructure as Code Secure v1.6.5



Files scanned: 1
Parsed files: 1
Queries loaded: 1039
Queries failed to execute: 0

------------------------------------

[38;2;91;192;222mResource Not Using Tags[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 9
[1mDescription:[0m AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m26[0m

		025: 
[38;2;240;173;78m		026: resource "aws_vpc" "vpc1" {
[0m		027:   cidr_block = "10.10.0.0/16"


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m63[0m

		062: 
[38;2;240;173;78m		063: resource "aws_default_security_group" "dsg" {
[0m		064:   vpc_id = aws_vpc.vpc1.id


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m82[0m

		081: 
[38;2;240;173;78m		082: resource "aws_instance" "inst1" {
[0m		083:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;91;192;222m[4]:[0m ../../src/main.tf:[38;2;34;187;51m95[0m

		094: 
[38;2;240;173;78m		095: resource "aws_instance" "inst2" {
[0m		096:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;91;192;222m[5]:[0m ../../src/main.tf:[38;2;34;187;51m108[0m

		107: 
[38;2;240;173;78m		108: resource "aws_instance" "inst3" {
[0m		109:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;91;192;222m[6]:[0m ../../src/main.tf:[38;2;34;187;51m56[0m

		055: 
[38;2;240;173;78m		056: resource "aws_lb_target_group" "test" {
[0m		057:   port = 80


	[38;2;91;192;222m[7]:[0m ../../src/main.tf:[38;2;34;187;51m34[0m

		033:   availability_zone_id = data.aws_availability_zones.available.zone_ids[0]
[38;2;240;173;78m		034:   tags = {
[0m		035:     Name = "subnet1"


	[38;2;91;192;222m[8]:[0m ../../src/main.tf:[38;2;34;187;51m49[0m

		048: 
[38;2;240;173;78m		049: resource "aws_lb" "test" {
[0m		050:   name = "test123"


	[38;2;91;192;222m[9]:[0m ../../src/main.tf:[38;2;34;187;51m44[0m

		043: 
[38;2;240;173;78m		044:   tags = {
[0m		045:     Name = "subnet2"


[38;2;91;192;222mEC2 Instance Monitoring Disabled[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 3
[1mDescription:[0m EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m95[0m

		094: 
[38;2;240;173;78m		095: resource "aws_instance" "inst2" {
[0m		096:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m108[0m

		107: 
[38;2;240;173;78m		108: resource "aws_instance" "inst3" {
[0m		109:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m82[0m

		081: 
[38;2;240;173;78m		082: resource "aws_instance" "inst1" {
[0m		083:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


[38;2;237;213;126mVPC FlowLogs Disabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m Every VPC resource should have an associated Flow Log
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m26[0m

		025: 
[38;2;240;173;78m		026: resource "aws_vpc" "vpc1" {
[0m		027:   cidr_block = "10.10.0.0/16"


[38;2;237;213;126mShield Advanced Not In Use[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m AWS Shield Advanced should be used for Amazon Route 53 hosted zone, AWS Global Accelerator accelerator, Elastic IP Address, Elastic Load Balancing, and Amazon CloudFront Distribution to protect these resources against robust DDoS attacks
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m49[0m

		048: 
[38;2;240;173;78m		049: resource "aws_lb" "test" {
[0m		050:   name = "test123"


[38;2;237;213;126mIAM Access Analyzer Not Enabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m26[0m

		025: 
[38;2;240;173;78m		026: resource "aws_vpc" "vpc1" {
[0m		027:   cidr_block = "10.10.0.0/16"


[38;2;237;213;126mEC2 Instance Using Default Security Group[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 3
[1mDescription:[0m EC2 instances should not use default security group(s)
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m96[0m

		095: resource "aws_instance" "inst2" {
[38;2;240;173;78m		096:   vpc_security_group_ids = [aws_default_security_group.dsg.id]
[0m		097:   subnet_id = aws_subnet.subnet1.id


	[38;2;237;213;126m[2]:[0m ../../src/main.tf:[38;2;34;187;51m83[0m

		082: resource "aws_instance" "inst1" {
[38;2;240;173;78m		083:   vpc_security_group_ids = [aws_default_security_group.dsg.id]
[0m		084:   subnet_id = aws_subnet.subnet1.id


	[38;2;237;213;126m[3]:[0m ../../src/main.tf:[38;2;34;187;51m109[0m

		108: resource "aws_instance" "inst3" {
[38;2;240;173;78m		109:   vpc_security_group_ids = [aws_default_security_group.dsg.id]
[0m		110:   subnet_id = aws_subnet.subnet1.id


[38;2;237;213;126mALB Deletion Protection Disabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m Application Load Balancer should have deletion protection enabled
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m49[0m

		048: 
[38;2;240;173;78m		049: resource "aws_lb" "test" {
[0m		050:   name = "test123"


[38;2;255;114;19mVPC Without Network Firewall[0m, Severity: [38;2;255;114;19mMEDIUM[0m, Results: 1
[1mDescription:[0m VPC should have a Network Firewall associated
[1mPlatform:[0m Terraform

	[38;2;255;114;19m[1]:[0m ../../src/main.tf:[38;2;34;187;51m26[0m

		025: 
[38;2;240;173;78m		026: resource "aws_vpc" "vpc1" {
[0m		027:   cidr_block = "10.10.0.0/16"


[38;2;255;114;19mALB Not Dropping Invalid Headers[0m, Severity: [38;2;255;114;19mMEDIUM[0m, Results: 1
[1mDescription:[0m It's considered a best practice when using Application Load Balancers to drop invalid header fields
[1mPlatform:[0m Terraform

	[38;2;255;114;19m[1]:[0m ../../src/main.tf:[38;2;34;187;51m49[0m

		048: 
[38;2;240;173;78m		049: resource "aws_lb" "test" {
[0m		050:   name = "test123"


[38;2;187;33;36mEC2 Instance Has Public IP[0m, Severity: [38;2;187;33;36mHIGH[0m, Results: 3
[1mDescription:[0m EC2 Instance should not have a public IP address.
[1mPlatform:[0m Terraform

	[38;2;187;33;36m[1]:[0m ../../src/main.tf:[38;2;34;187;51m82[0m

		081: 
[38;2;240;173;78m		082: resource "aws_instance" "inst1" {
[0m		083:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;187;33;36m[2]:[0m ../../src/main.tf:[38;2;34;187;51m108[0m

		107: 
[38;2;240;173;78m		108: resource "aws_instance" "inst3" {
[0m		109:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


	[38;2;187;33;36m[3]:[0m ../../src/main.tf:[38;2;34;187;51m95[0m

		094: 
[38;2;240;173;78m		095: resource "aws_instance" "inst2" {
[0m		096:   vpc_security_group_ids = [aws_default_security_group.dsg.id]


[38;2;187;33;36mALB Listening on HTTP[0m, Severity: [38;2;187;33;36mHIGH[0m, Results: 1
[1mDescription:[0m AWS Application Load Balancer (alb) should not listen on HTTP
[1mPlatform:[0m Terraform

	[38;2;187;33;36m[1]:[0m ../../src/main.tf:[38;2;34;187;51m70[0m

		069:   port = 80
[38;2;240;173;78m		070:   default_action {
[0m		071:     type             = "forward"



Results Summary:
[38;2;187;33;36mHIGH[0m: 4
[38;2;255;114;19mMEDIUM[0m: 2
[38;2;237;213;126mLOW[0m: 7
[38;2;91;192;222mINFO[0m: 12
TOTAL: 25

Scan duration: 14.613767007s
