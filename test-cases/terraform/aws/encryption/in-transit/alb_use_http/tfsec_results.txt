
  Result 1

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.inst3' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:108-113


     105 |   port = 80
     106 | }
     107 | 
     108 | resource "aws_instance" "inst3" {
     109 |   vpc_security_group_ids = [aws_default_security_group.dsg.id]
     110 |   subnet_id = aws_subnet.subnet1.id
     111 |   ami = data.aws_ami.ubuntu.id
     112 |   instance_type = "t3.micro"
     113 | }

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 2

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.inst2' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:95-100


      92 |   port = 80
      93 | }
      94 | 
      95 | resource "aws_instance" "inst2" {
      96 |   vpc_security_group_ids = [aws_default_security_group.dsg.id]
      97 |   subnet_id = aws_subnet.subnet1.id
      98 |   ami = data.aws_ami.ubuntu.id
      99 |   instance_type = "t3.micro"
     100 | }
     101 | 
     102 | resource "aws_lb_target_group_attachment" "attach3" {
     103 |   target_group_arn = aws_lb_target_group.test.arn

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 3

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.inst1' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:82-87


      79 |   port = 80
      80 | }
      81 | 
      82 | resource "aws_instance" "inst1" {
      83 |   vpc_security_group_ids = [aws_default_security_group.dsg.id]
      84 |   subnet_id = aws_subnet.subnet1.id
      85 |   ami = data.aws_ami.ubuntu.id
      86 |   instance_type = "t3.micro"
      87 | }
      88 | 
      89 | resource "aws_lb_target_group_attachment" "attach2" {
      90 |   target_group_arn = aws_lb_target_group.test.arn

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 4

  [aws-elb-drop-invalid-headers][HIGH] Resource 'aws_lb.test' does not drop invalid header fields
  /src/main.tf:49-54


      46 |   }
      47 | }
      48 | 
      49 | resource "aws_lb" "test" {
      50 |   name = "test123"
      51 |   load_balancer_type = "application"
      52 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
      53 |   internal = true
      54 | }
      55 | 
      56 | resource "aws_lb_target_group" "test" {
      57 |   port = 80

  Legacy ID:  AWS083
  Impact:     Invalid headers being passed through to the target of the load balance may exploit vulnerabilities
  Resolution: Set drop_invalid_header_fields to true

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields 
  - https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html 

  Result 5

  [aws-elbv2-http-not-used][CRITICAL] Resource 'aws_lb_listener.listener' uses plain HTTP instead of HTTPS.
  /src/main.tf:67-74


      64 |   vpc_id = aws_vpc.vpc1.id
      65 | }
      66 | 
      67 | resource "aws_lb_listener" "listener" {
      68 |   load_balancer_arn = aws_lb.test.arn
      69 |   port = 80
      70 |   default_action {
      71 |     type             = "forward"
      72 |     target_group_arn = aws_lb_target_group.test.arn
      73 |   }
      74 | }
      75 | 
      76 | resource "aws_lb_target_group_attachment" "attach1" {
      77 |   target_group_arn = aws_lb_target_group.test.arn

  Legacy ID:  AWS004
  Impact:     Your traffic is not protected
  Resolution: Switch to HTTPS to benefit from TLS security features

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elbv2/http-not-used 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener 
  - https://www.cloudflare.com/en-gb/learning/ssl/why-is-http-not-secure/ 

  times
  ------------------------------------------
  disk i/o             30.659167ms
  parsing HCL          582.042Âµs
  evaluating values    5.258916ms
  running checks       28.679125ms

  counts
  ------------------------------------------
  files loaded         1
  blocks               16
  modules              0

  results
  ------------------------------------------
  critical             1
  high                 4
  medium               0
  low                  0
  ignored              0

  5 potential problems detected.

