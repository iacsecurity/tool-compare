
Result #1 CRITICAL Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:64
────────────────────────────────────────────────────────────────────────────────
   32    resource "aws_cloudfront_distribution" "s3_distribution" {
   ..  
   64  [     viewer_protocol_policy = "allow-all" ("allow-all")
  ...  
  131    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enforce-https
      Impact CloudFront is available through an unencrypted connection
  Resolution Only allow HTTPS for CloudFront distribution communication

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/cloudfront/enforce-https/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Distribution allows unencrypted communications. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:128-130
────────────────────────────────────────────────────────────────────────────────
   32    resource "aws_cloudfront_distribution" "s3_distribution" {
   ..  
  128  ┌   viewer_certificate {
  129  │     cloudfront_default_certificate = true
  130  └   }
  131    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-use-secure-tls-policy
      Impact Outdated SSL policies increase exposure to known vulnerabilities
  Resolution Use the most modern TLS/SSL policies available

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/cloudfront/use-secure-tls-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH No public access block so not blocking public acls 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH No public access block so not blocking public policies 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #6 HIGH No public access block so not ignoring public acls 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #7 HIGH No public access block so not restricting public buckets 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #8 HIGH Bucket does not encrypt data with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-encryption-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable encryption using customer managed keys

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #9 HIGH Bucket has a public ACL: 'public-read-write'. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:16
────────────────────────────────────────────────────────────────────────────────
   14    resource "aws_s3_bucket" "dist" {
   ..  
   16  [   acl    = "public-read-write" ("public-read-write")
   ..  
   25    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-access-with-acl
      Impact Public access to the bucket can lead to data leakage
  Resolution Don't use canned ACLs or switch to private acl

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-access-with-acl/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket
────────────────────────────────────────────────────────────────────────────────


Result #10 HIGH Distribution does not utilise a WAF. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:32-131
────────────────────────────────────────────────────────────────────────────────
   32  ┌ resource "aws_cloudfront_distribution" "s3_distribution" {
   33  │   origin {
   34  │     domain_name = aws_s3_bucket.dist.bucket_regional_domain_name
   35  │     origin_id   = local.s3_origin_id
   36  │   }
   37  │ 
   38  │   enabled             = true
   39  │   is_ipv6_enabled     = true
   40  └   comment             = "Some comment"
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-cloudfront-enable-waf
      Impact Complex web application attacks can more easily be performed without a WAF
  Resolution Enable WAF for the CloudFront distribution

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/cloudfront/enable-waf/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id
────────────────────────────────────────────────────────────────────────────────


Result #11 HIGH No public access block so not blocking public acls 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #12 HIGH No public access block so not blocking public policies 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #13 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #14 HIGH No public access block so not ignoring public acls 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #15 HIGH No public access block so not restricting public buckets 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #16 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #17 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #18 LOW Bucket does not have a corresponding public access block. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:14-25
────────────────────────────────────────────────────────────────────────────────
   14  ┌ resource "aws_s3_bucket" "dist" {
   15  │   bucket = "dist-cloud-test"
   16  │   acl    = "public-read-write"
   17  │ 
   18  │   tags = {
   19  │     Name = "dist-cloud-test"
   20  │   }
   21  │   logging {
   22  └    	target_bucket = aws_s3_bucket.logging.id
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-specify-public-access-block
      Impact Public access policies may be applied to sensitive data buckets
  Resolution Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket
────────────────────────────────────────────────────────────────────────────────


Result #19 LOW Bucket does not have a corresponding public access block. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-12
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_s3_bucket" "logging" {
    6      bucket = "dist-cloud-test-logs"
    7      acl    = "log-delivery-write"
    8    
    9      tags = {
   10        Name = "dist-cloud-test-logs"
   11      }
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-specify-public-access-block
      Impact Public access policies may be applied to sensitive data buckets
  Resolution Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/specify-public-access-block/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             3.155375ms
  parsing              393.25µs
  adaptation           81.916µs
  checks               5.937417ms
  total                9.567958ms

  counts
  ──────────────────────────────────────────
  modules downloaded   0
  modules processed    1
  blocks processed     5
  files read           1

  results
  ──────────────────────────────────────────
  passed               8
  ignored              0
  critical             1
  high                 14
  medium               2
  low                  2

  8 passed, 19 potential problem(s) detected.

