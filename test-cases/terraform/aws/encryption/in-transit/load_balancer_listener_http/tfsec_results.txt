
Result #1 CRITICAL Listener for application load balancer does not use HTTPS. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:68
────────────────────────────────────────────────────────────────────────────────
   65    resource "aws_lb_listener" "lb_listener_test" {
   66      load_balancer_arn = aws_lb.alb_test.arn
   67      port              = "80"
   68  [   protocol          = "HTTP" ("HTTP")
   69    
   70      default_action {
   71        type             = "forward"
   72        target_group_arn = aws_lb_target_group.test.arn
   73      }
   74    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-elb-http-not-used
      Impact Your traffic is not protected
  Resolution Switch to HTTPS to benefit from TLS security features

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/http-not-used/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Application load balancer is not set to drop invalid headers. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:60-63
────────────────────────────────────────────────────────────────────────────────
   60    resource "aws_lb" "alb_test" {
   61      subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
   62      load_balancer_type = "application"
   63    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-elb-drop-invalid-headers
      Impact Invalid headers being passed through to the target of the load balance may exploit vulnerabilities
  Resolution Set drop_invalid_header_fields to true

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/drop-invalid-headers/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH Load balancer is exposed publicly. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:60-63
────────────────────────────────────────────────────────────────────────────────
   60    resource "aws_lb" "alb_test" {
   61      subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
   62      load_balancer_type = "application"
   63    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-elb-alb-not-public
      Impact The load balancer is exposed on the internet
  Resolution Switch to an internal load balancer or add a tfsec ignore

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/alb-not-public/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb
────────────────────────────────────────────────────────────────────────────────


Result #4 MEDIUM VPC Flow Logs is not enabled for VPC  
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-7
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_vpc" "vpc1" {
    6      cidr_block = "10.10.0.0/16"
    7    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-require-vpc-flow-logs-for-all-vpcs
      Impact Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.
  Resolution Enable flow logs for VPC

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             4.051291ms
  parsing              5.213541ms
  adaptation           76.875µs
  checks               2.139875ms
  total                11.481582ms

  counts
  ──────────────────────────────────────────
  modules downloaded   0
  modules processed    1
  blocks processed     12
  files read           1

  results
  ──────────────────────────────────────────
  passed               8
  ignored              0
  critical             1
  high                 2
  medium               1
  low                  0

  8 passed, 4 potential problem(s) detected.

