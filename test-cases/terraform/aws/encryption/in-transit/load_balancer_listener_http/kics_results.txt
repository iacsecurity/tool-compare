
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    


Scanning with Keeping Infrastructure as Code Secure v1.4.9



Files scanned: 1
Parsed files: 1
Queries loaded: 851
Queries failed to execute: 0

------------------------------------

Resource Not Using Tags, Severity: INFO, Results: 7
Description: AWS services resource tags are an essential part of managing components
Platform: Terraform

	[1]: ../../src/main.tf:32

		031: 
		032: resource "aws_internet_gateway" "igw1" {
		033:   vpc_id = aws_vpc.vpc1.id


	[2]: ../../src/main.tf:54

		053: 
		054: resource "aws_lb_target_group" "test" {
		055:   vpc_id = aws_vpc.vpc1.id


	[3]: ../../src/main.tf:36

		035: 
		036: resource "aws_route_table" "rt1" {
		037:   vpc_id = aws_vpc.vpc1.id


	[4]: ../../src/main.tf:5

		004: 
		005: resource "aws_vpc" "vpc1" {
		006:   cidr_block = "10.10.0.0/16"


	[5]: ../../src/main.tf:27

		026: 
		027:   tags = {
		028:     Name = "subnet2"


	[6]: ../../src/main.tf:60

		059: 
		060: resource "aws_lb" "alb_test" {
		061:   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]


	[7]: ../../src/main.tf:17

		016:   availability_zone_id = data.aws_availability_zones.available.zone_ids[0]
		017:   tags = {
		018:     Name = "subnet1"


Shield Advanced Not In Use, Severity: LOW, Results: 1
Description: AWS Shield Advanced should be used for Amazon Route 53 hosted zone, AWS Global Accelerator accelerator, Elastic IP Address, Elastic Load Balancing, and Amazon CloudFront Distribution to protect these resources against robust DDoS attacks
Platform: Terraform

	[1]: ../../src/main.tf:60

		059: 
		060: resource "aws_lb" "alb_test" {
		061:   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]


ALB Deletion Protection Disabled, Severity: LOW, Results: 1
Description: Application Load Balancer should have deletion protection enabled
Platform: Terraform

	[1]: ../../src/main.tf:60

		059: 
		060: resource "aws_lb" "alb_test" {
		061:   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]


VPC Without Network Firewall, Severity: MEDIUM, Results: 1
Description: VPC should have a Network Firewall associated
Platform: Terraform

	[1]: ../../src/main.tf:5

		004: 
		005: resource "aws_vpc" "vpc1" {
		006:   cidr_block = "10.10.0.0/16"


VPC FlowLogs Disabled, Severity: MEDIUM, Results: 1
Description: VPC hasn't got any FlowLog associated
Platform: Terraform

	[1]: ../../src/main.tf:5

		004: 
		005: resource "aws_vpc" "vpc1" {
		006:   cidr_block = "10.10.0.0/16"


ALB Not Dropping Invalid Headers, Severity: MEDIUM, Results: 1
Description: It's considered a best practice when using Application Load Balancers to drop invalid header fields
Platform: Terraform

	[1]: ../../src/main.tf:60

		059: 
		060: resource "aws_lb" "alb_test" {
		061:   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]


ALB Is Not Integrated With WAF, Severity: MEDIUM, Results: 1
Description: All Application Load Balancers (ALB) must be protected with Web Application Firewall (WAF) service
Platform: Terraform

	[1]: ../../src/main.tf:60

		059: 
		060: resource "aws_lb" "alb_test" {
		061:   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]


ALB Listening on HTTP, Severity: HIGH, Results: 1
Description: AWS Application Load Balancer (alb) should not listen on HTTP
Platform: Terraform

	[1]: ../../src/main.tf:70

		069: 
		070:   default_action {
		071:     type             = "forward"



Results Summary:
HIGH: 1
MEDIUM: 4
LOW: 2
INFO: 7
TOTAL: 14

Scan duration: 9.105050629s
