terraform scan results:

Passed checks: 3, Failed checks: 9, Skipped checks: 0

Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_lb.alb_test
	File: /main.tf:60-63

		60 | resource "aws_lb" "alb_test" {
		61 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		62 |   load_balancer_type = "application"
		63 | }


Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_lb.alb_test
	File: /main.tf:60-63
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers

		60 | resource "aws_lb" "alb_test" {
		61 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		62 |   load_balancer_type = "application"
		63 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_lb.alb_test
	File: /main.tf:60-63
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		60 | resource "aws_lb" "alb_test" {
		61 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		62 |   load_balancer_type = "application"
		63 | }


Check: CKV_AWS_103: "Ensure that load balancer is using TLS 1.2"
	FAILED for resource: aws_lb_listener.lb_listener_test
	File: /main.tf:65-74
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_43

		65 | resource "aws_lb_listener" "lb_listener_test" {
		66 |   load_balancer_arn = aws_lb.alb_test.arn
		67 |   port              = "80"
		68 |   protocol          = "HTTP"
		69 | 
		70 |   default_action {
		71 |     type             = "forward"
		72 |     target_group_arn = aws_lb_target_group.test.arn
		73 |   }
		74 | }


Check: CKV_AWS_2: "Ensure ALB protocol is HTTPS"
	FAILED for resource: aws_lb_listener.lb_listener_test
	File: /main.tf:65-74
	Guide: https://docs.bridgecrew.io/docs/networking_29

		65 | resource "aws_lb_listener" "lb_listener_test" {
		66 |   load_balancer_arn = aws_lb.alb_test.arn
		67 |   port              = "80"
		68 |   protocol          = "HTTP"
		69 | 
		70 |   default_action {
		71 |     type             = "forward"
		72 |     target_group_arn = aws_lb_target_group.test.arn
		73 |   }
		74 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.vpc1
	File: /main.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		5 | resource "aws_vpc" "vpc1" {
		6 |   cidr_block = "10.10.0.0/16"
		7 | }


Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	FAILED for resource: aws_lb.alb_test
	File: /main.tf:60-63
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

		60 | resource "aws_lb" "alb_test" {
		61 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		62 |   load_balancer_type = "application"
		63 | }


Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	FAILED for resource: aws_lb.alb_test
	File: /main.tf:60-63
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

		60 | resource "aws_lb" "alb_test" {
		61 |   subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		62 |   load_balancer_type = "application"
		63 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.vpc1
	File: /main.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/networking_4

		5 | resource "aws_vpc" "vpc1" {
		6 |   cidr_block = "10.10.0.0/16"
		7 | }


