Failed to run the process ...
{
  "meta": {
    "isPrivate": true,
    "isLicensesEnabled": false,
    "ignoreSettings": null,
    "org": "ryder.d",
    "projectId": "",
    "policy": ""
  },
  "filesystemPolicy": false,
  "vulnerabilities": [],
  "dependencyCount": 0,
  "licensesPolicy": null,
  "ignoreSettings": null,
  "targetFile": "main.tf",
  "projectName": "project",
  "org": "ryder.d",
  "policy": "",
  "isPrivate": true,
  "targetFilePath": "/project/main.tf",
  "packageManager": "terraformconfig",
  "path": "/project",
  "projectType": "terraformconfig",
  "ok": false,
  "infrastructureAsCodeIssues": [
    {
      "resolve": "Set `resource.backup_retention_period` to `1` or more",
      "id": "SNYK-CC-AWS-408",
      "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
      "remediation": {
        "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
        "terraform": "Set `resource.backup_retention_period` to `1` or more"
      },
      "subType": "RDS",
      "policyEngineType": "opa",
      "publicId": "SNYK-CC-AWS-408",
      "title": "RDS automatic backup is disabled",
      "severity": "medium",
      "msg": "resource.aws_db_instance[test].backup_retention_period",
      "issue": "Automatic backup of AWS Relational Database is disabled",
      "type": "terraform",
      "references": [
        "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more"
      },
      "lineNumber": 60,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-408",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_db_instance[test]",
        "backup_retention_period"
      ]
    },
    {
      "severity": "high",
      "description": "",
      "resolve": "Set `publicly_accessible` attribute to `false`",
      "id": "SNYK-CC-TF-50",
      "impact": "Increases attack vector reachability",
      "msg": "resource.aws_db_instance[test].publicly_accessible",
      "subType": "Public Access",
      "issue": "AWS resource is publicly accessible",
      "publicId": "SNYK-CC-TF-50",
      "title": "Resource is publicly accessible",
      "references": [
        "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
        "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "AWS resource is publicly accessible",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `publicly_accessible` attribute to `false`"
      },
      "lineNumber": 62,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-50",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_db_instance[test]",
        "publicly_accessible"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `iam_database_authentication_enabled` to `true`.",
      "id": "SNYK-CC-AWS-414",
      "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
      "msg": "resource.aws_db_instance[test].iam_database_authentication_enabled",
      "remediation": {
        "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
        "terraform": "Set `iam_database_authentication_enabled` to `true`."
      },
      "subType": "RDS",
      "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
      "publicId": "SNYK-CC-AWS-414",
      "title": "RDS IAM authentication is disabled",
      "references": [
        "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`."
      },
      "lineNumber": 60,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-414",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_db_instance[test]",
        "iam_database_authentication_enabled"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `description` attribute to meaningful statement",
      "id": "SNYK-CC-TF-56",
      "impact": "Increases the security management overhead",
      "msg": "resource.aws_security_group[nondefault].description",
      "subType": "VPC",
      "issue": "The description field is missing in the security group",
      "publicId": "SNYK-CC-TF-56",
      "title": "Missing description",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement"
      },
      "lineNumber": 9,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-56",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_security_group[nondefault]",
        "description"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `storage_encrypted` attribute to true",
      "id": "SNYK-CC-TF-201",
      "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
      "msg": "resource.aws_db_instance[test].storage_encrypted",
      "remediation": {
        "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
        "terraform": "Set `storage_encrypted` attribute to true"
      },
      "subType": "RDS",
      "issue": "The DB instance storage is not encrypted by default",
      "publicId": "SNYK-CC-TF-201",
      "title": "Non-encrypted RDS instance at rest",
      "references": [
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true"
      },
      "lineNumber": 60,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-201",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_db_instance[test]",
        "storage_encrypted"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
      "id": "SNYK-CC-TF-1",
      "impact": "That potentially everyone can access your resource",
      "msg": "input.resource.aws_security_group[nondefault].ingress",
      "remediation": {
        "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
      },
      "subType": "VPC",
      "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
      "publicId": "SNYK-CC-TF-1",
      "title": "Security Group allows open ingress",
      "references": [
        "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
      },
      "lineNumber": 12,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-1",
      "isGeneratedByCustomRule": false,
      "path": [
        "input",
        "resource",
        "aws_security_group[nondefault]",
        "ingress"
      ]
    }
  ]
}
