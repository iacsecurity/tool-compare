
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    


Scanning with Keeping Infrastructure as Code Secure v1.3.1




Files scanned: 1
Parsed files: 1
Queries loaded: 559
Queries failed to execute: 0

------------------------------------

Security Group Rules Without Description, Severity: INFO, Results: 1
Description: It's considered a best practice for all rules in AWS Security Group to have a description
Platform: Terraform

	[1]: /src/main.tf:58

		057: 
		058:   egress {
		059:     from_port   = 443


Resource Not Using Tags, Severity: INFO, Results: 8
Description: AWS services resource tags are an essential part of managing components
Platform: Terraform

	[1]: /src/main.tf:30

		029: 
		030: resource "aws_vpc_endpoint" "dynamodb-vpce-gw" {
		031:   vpc_id       = aws_vpc.main.id


	[2]: /src/main.tf:53

		052: 
		053: resource "aws_security_group" "allow-public-outbound-sg" {
		054:   name        = "allow-public-outbound-sg"


	[3]: /src/main.tf:83

		082: 
		083: resource "aws_instance" "test" {
		084:   ami = data.aws_ami.ubuntu.id


	[4]: /src/main.tf:90

		089: 
		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
		091:   name           = "GameScores"


	[5]: /src/main.tf:8

		007: }
		008: resource "aws_vpc" "main" {
		009:   cidr_block = "192.168.100.0/24"


	[6]: /src/main.tf:48

		047: 
		048:   tags = {
		049:     Name = "allow-public-outbound-nacl"


	[7]: /src/main.tf:17

		016: 
		017:   tags = {
		018:     Name = "private-subnet"


	[8]: /src/main.tf:25

		024: 
		025:   tags = {
		026:     Name = "private-rtb"


EC2 Not EBS Optimized, Severity: INFO, Results: 1
Description: It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance
Platform: Terraform

	[1]: /src/main.tf:83

		082: 
		083: resource "aws_instance" "test" {
		084:   ami = data.aws_ami.ubuntu.id


EC2 Instance Monitoring Disabled, Severity: INFO, Results: 1
Description: EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods
Platform: Terraform

	[1]: /src/main.tf:83

		082: 
		083: resource "aws_instance" "test" {
		084:   ami = data.aws_ami.ubuntu.id


DynamoDB Table Point In Time Recovery Disabled, Severity: INFO, Results: 1
Description: It's considered a best practice to have point in time recovery enabled for DynamoDB Table
Platform: Terraform

	[1]: /src/main.tf:90

		089: 
		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
		091:   name           = "GameScores"


VPC FlowLogs Disabled, Severity: MEDIUM, Results: 1
Description: VPC hasn't got any FlowLog associated
Platform: Terraform

	[1]: /src/main.tf:8

		007: }
		008: resource "aws_vpc" "main" {
		009:   cidr_block = "192.168.100.0/24"


DynamoDB Table Not Encrypted, Severity: MEDIUM, Results: 1
Description: AWS DynamoDB Tables should have server-side encryption
Platform: Terraform

	[1]: /src/main.tf:90

		089: 
		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
		091:   name           = "GameScores"


EC2 Instance Has Public IP, Severity: HIGH, Results: 1
Description: EC2 Instance should not have a public IP address.
Platform: Terraform

	[1]: /src/main.tf:83

		082: 
		083: resource "aws_instance" "test" {
		084:   ami = data.aws_ami.ubuntu.id



Results Summary:
HIGH: 1
MEDIUM: 2
LOW: 0
INFO: 12
TOTAL: 15

Scan duration: 19.521043259s
