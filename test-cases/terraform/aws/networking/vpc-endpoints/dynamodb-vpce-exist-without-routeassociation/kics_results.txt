[38;2;34;187;51m
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    

[0m
Scanning with Keeping Infrastructure as Code Secure v1.6.5



Files scanned: 1
Parsed files: 1
Queries loaded: 1039
Queries failed to execute: 0

------------------------------------

[38;2;91;192;222mSecurity Group Rule Without Description[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 1
[1mDescription:[0m It's considered a best practice for all rules in AWS Security Group to have a description
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m58[0m

		057: 
[38;2;240;173;78m		058:   egress {
[0m		059:     from_port   = 443


[38;2;91;192;222mResource Not Using Tags[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 8
[1mDescription:[0m AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m53[0m

		052: 
[38;2;240;173;78m		053: resource "aws_security_group" "allow-public-outbound-sg" {
[0m		054:   name        = "allow-public-outbound-sg"


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m25[0m

		024: 
[38;2;240;173;78m		025:   tags = {
[0m		026:     Name = "private-rtb"


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m8[0m

		007: }
[38;2;240;173;78m		008: resource "aws_vpc" "main" {
[0m		009:   cidr_block = "192.168.100.0/24"


	[38;2;91;192;222m[4]:[0m ../../src/main.tf:[38;2;34;187;51m30[0m

		029: 
[38;2;240;173;78m		030: resource "aws_vpc_endpoint" "dynamodb-vpce-gw" {
[0m		031:   vpc_id       = aws_vpc.main.id


	[38;2;91;192;222m[5]:[0m ../../src/main.tf:[38;2;34;187;51m90[0m

		089: 
[38;2;240;173;78m		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
[0m		091:   name           = "GameScores"


	[38;2;91;192;222m[6]:[0m ../../src/main.tf:[38;2;34;187;51m83[0m

		082: 
[38;2;240;173;78m		083: resource "aws_instance" "test" {
[0m		084:   ami = data.aws_ami.ubuntu.id


	[38;2;91;192;222m[7]:[0m ../../src/main.tf:[38;2;34;187;51m48[0m

		047: 
[38;2;240;173;78m		048:   tags = {
[0m		049:     Name = "allow-public-outbound-nacl"


	[38;2;91;192;222m[8]:[0m ../../src/main.tf:[38;2;34;187;51m17[0m

		016: 
[38;2;240;173;78m		017:   tags = {
[0m		018:     Name = "private-subnet"


[38;2;91;192;222mName Is Not Snake Case[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 6
[1mDescription:[0m All names should follow snake case pattern.
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m53[0m

		052: 
[38;2;240;173;78m		053: resource "aws_security_group" "allow-public-outbound-sg" {
[0m		054:   name        = "allow-public-outbound-sg"


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m22[0m

		021: 
[38;2;240;173;78m		022: resource "aws_route_table" "private-rtb" {
[0m		023:   vpc_id = aws_vpc.main.id


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m30[0m

		029: 
[38;2;240;173;78m		030: resource "aws_vpc_endpoint" "dynamodb-vpce-gw" {
[0m		031:   vpc_id       = aws_vpc.main.id


	[38;2;91;192;222m[4]:[0m ../../src/main.tf:[38;2;34;187;51m13[0m

		012: 
[38;2;240;173;78m		013: resource "aws_subnet" "private-subnet" {
[0m		014:   vpc_id     = aws_vpc.main.id


	[38;2;91;192;222m[5]:[0m ../../src/main.tf:[38;2;34;187;51m35[0m

		034: 
[38;2;240;173;78m		035: resource "aws_network_acl" "allow-public-outbound-nacl" {
[0m		036:   vpc_id = aws_vpc.main.id


	[38;2;91;192;222m[6]:[0m ../../src/main.tf:[38;2;34;187;51m90[0m

		089: 
[38;2;240;173;78m		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
[0m		091:   name           = "GameScores"


[38;2;91;192;222mEC2 Not EBS Optimized[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 1
[1mDescription:[0m It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m83[0m

		082: 
[38;2;240;173;78m		083: resource "aws_instance" "test" {
[0m		084:   ami = data.aws_ami.ubuntu.id


[38;2;91;192;222mEC2 Instance Monitoring Disabled[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 1
[1mDescription:[0m EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m83[0m

		082: 
[38;2;240;173;78m		083: resource "aws_instance" "test" {
[0m		084:   ami = data.aws_ami.ubuntu.id


[38;2;91;192;222mDynamoDB Table Point In Time Recovery Disabled[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 1
[1mDescription:[0m It's considered a best practice to have point in time recovery enabled for DynamoDB Table
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m90[0m

		089: 
[38;2;240;173;78m		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
[0m		091:   name           = "GameScores"


[38;2;237;213;126mVPC FlowLogs Disabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m Every VPC resource should have an associated Flow Log
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m8[0m

		007: }
[38;2;240;173;78m		008: resource "aws_vpc" "main" {
[0m		009:   cidr_block = "192.168.100.0/24"


[38;2;237;213;126mIAM Access Analyzer Not Enabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m8[0m

		007: }
[38;2;240;173;78m		008: resource "aws_vpc" "main" {
[0m		009:   cidr_block = "192.168.100.0/24"


[38;2;255;114;19mVPC Without Network Firewall[0m, Severity: [38;2;255;114;19mMEDIUM[0m, Results: 1
[1mDescription:[0m VPC should have a Network Firewall associated
[1mPlatform:[0m Terraform

	[38;2;255;114;19m[1]:[0m ../../src/main.tf:[38;2;34;187;51m8[0m

		007: }
[38;2;240;173;78m		008: resource "aws_vpc" "main" {
[0m		009:   cidr_block = "192.168.100.0/24"


[38;2;255;114;19mDynamodb VPC Endpoint Without Route Table Association[0m, Severity: [38;2;255;114;19mMEDIUM[0m, Results: 1
[1mDescription:[0m Dynamodb VPC Endpoint should be associated with Route Table Association
[1mPlatform:[0m Terraform

	[38;2;255;114;19m[1]:[0m ../../src/main.tf:[38;2;34;187;51m31[0m

		030: resource "aws_vpc_endpoint" "dynamodb-vpce-gw" {
[38;2;240;173;78m		031:   vpc_id       = aws_vpc.main.id
[0m		032:   service_name = "com.amazonaws.us-east-1.dynamodb"


[38;2;255;114;19mDynamoDB Table Not Encrypted[0m, Severity: [38;2;255;114;19mMEDIUM[0m, Results: 1
[1mDescription:[0m AWS DynamoDB Tables should have server-side encryption
[1mPlatform:[0m Terraform

	[38;2;255;114;19m[1]:[0m ../../src/main.tf:[38;2;34;187;51m90[0m

		089: 
[38;2;240;173;78m		090: resource "aws_dynamodb_table" "basic-dynamodb-table" {
[0m		091:   name           = "GameScores"


[38;2;187;33;36mEC2 Instance Has Public IP[0m, Severity: [38;2;187;33;36mHIGH[0m, Results: 1
[1mDescription:[0m EC2 Instance should not have a public IP address.
[1mPlatform:[0m Terraform

	[38;2;187;33;36m[1]:[0m ../../src/main.tf:[38;2;34;187;51m83[0m

		082: 
[38;2;240;173;78m		083: resource "aws_instance" "test" {
[0m		084:   ami = data.aws_ami.ubuntu.id



Results Summary:
[38;2;187;33;36mHIGH[0m: 1
[38;2;255;114;19mMEDIUM[0m: 3
[38;2;237;213;126mLOW[0m: 2
[38;2;91;192;222mINFO[0m: 18
TOTAL: 24

Scan duration: 14.665583173s
