
  Result 1

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.public-internet-sg' has egress without description.
  /src/main.tf:55-60


      52 |   description = "Allow all local traffic with internet access"
      53 |   vpc_id      = aws_vpc.main.id
      54 | 
      55 |   egress {
      56 |     from_port   = 0
      57 |     to_port     = 0
      58 |     protocol    = "-1"
      59 |     cidr_blocks = [local.quad_zero_cidr_block]
      60 |   }
      61 | 
      62 |   ingress {
      63 |     from_port   = 0

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  Result 2

  [aws-vpc-no-public-egress-sg][CRITICAL] Resource 'aws_security_group.public-internet-sg' defines a fully open egress security group.
  /src/main.tf:59


      56 |     from_port   = 0
      57 |     to_port     = 0
      58 |     protocol    = "-1"
      59 |     cidr_blocks = [local.quad_zero_cidr_block]    list: ["0.0.0.0/0"]
      60 |   }
      61 | 
      62 |   ingress {

  Legacy ID:  AWS009
  Impact:     The port is exposed for egressing data to the internet
  Resolution: Set a more restrictive cidr range

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sg 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 

  Result 3

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.test-ec2-instance' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:87-92


      84 |   owners = ["099720109477"] # Canonical
      85 | }
      86 | 
      87 | resource "aws_instance" "test-ec2-instance" {
      88 |   ami = data.aws_ami.ubuntu.id
      89 |   instance_type = "t2.micro"
      90 |   subnet_id = aws_subnet.public-subnet.id
      91 |   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
      92 | }
      93 | 
      94 | resource "aws_vpc_endpoint" "sqs-vpc-endpoint" {
      95 |   vpc_id            = aws_vpc.main.id

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 4

  [aws-sqs-enable-queue-encryption][HIGH] Resource 'aws_sqs_queue.test-queue' defines an unencrypted SQS queue.
  /src/main.tf:103-105


     100 |   security_group_ids = [aws_security_group.public-internet-sg.id]
     101 | }
     102 | 
     103 | resource "aws_sqs_queue" "test-queue" {
     104 |   name = "test-queue"
     105 | }
     106 | 
     107 | resource "aws_internet_gateway" "igw" {
     108 |   vpc_id = aws_vpc.main.id

  Legacy ID:  AWS015
  Impact:     The SQS queue messages could be read if compromised
  Resolution: Turn on SQS Queue encryption

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse 
  - https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html 

  Result 5

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.public-internet-sg' has ingress without description.
  /src/main.tf:62-67


      59 |     cidr_blocks = [local.quad_zero_cidr_block]
      60 |   }
      61 | 
      62 |   ingress {
      63 |     from_port   = 0
      64 |     to_port     = 0
      65 |     protocol    = "-1"
      66 |     cidr_blocks = [local.cidr_block]
      67 |   }
      68 | 
      69 | }
      70 | 

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  times
  ------------------------------------------
  disk i/o             31.661459ms
  parsing HCL          586.334Âµs
  evaluating values    5.095291ms
  running checks       30.762459ms

  counts
  ------------------------------------------
  files loaded         1
  blocks               12
  modules              0

  results
  ------------------------------------------
  critical             1
  high                 2
  medium               0
  low                  2
  ignored              0

  5 potential problems detected.

