terraform scan results:

Passed checks: 8, Failed checks: 8, Skipped checks: 0

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.public-internet-sg
	File: /main.tf:50-69
	Guide: https://docs.bridgecrew.io/docs/networking_31

		50 | resource "aws_security_group" "public-internet-sg" {
		51 |   name        = "public-internet-sg"
		52 |   description = "Allow all local traffic with internet access"
		53 |   vpc_id      = aws_vpc.main.id
		54 | 
		55 |   egress {
		56 |     from_port   = 0
		57 |     to_port     = 0
		58 |     protocol    = "-1"
		59 |     cidr_blocks = [local.quad_zero_cidr_block]
		60 |   }
		61 | 
		62 |   ingress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = "-1"
		66 |     cidr_blocks = [local.cidr_block]
		67 |   }
		68 | 
		69 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.test-ec2-instance
	File: /main.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		87 | resource "aws_instance" "test-ec2-instance" {
		88 |   ami = data.aws_ami.ubuntu.id
		89 |   instance_type = "t2.micro"
		90 |   subnet_id = aws_subnet.public-subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
		92 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.test-ec2-instance
	File: /main.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		87 | resource "aws_instance" "test-ec2-instance" {
		88 |   ami = data.aws_ami.ubuntu.id
		89 |   instance_type = "t2.micro"
		90 |   subnet_id = aws_subnet.public-subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
		92 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration EBS is securely encrypted"
	FAILED for resource: aws_instance.test-ec2-instance
	File: /main.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/general_13

		87 | resource "aws_instance" "test-ec2-instance" {
		88 |   ami = data.aws_ami.ubuntu.id
		89 |   instance_type = "t2.micro"
		90 |   subnet_id = aws_subnet.public-subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
		92 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.test-ec2-instance
	File: /main.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		87 | resource "aws_instance" "test-ec2-instance" {
		88 |   ami = data.aws_ami.ubuntu.id
		89 |   instance_type = "t2.micro"
		90 |   subnet_id = aws_subnet.public-subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public-internet-sg.id]
		92 | }


Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	FAILED for resource: aws_sqs_queue.test-queue
	File: /main.tf:103-105
	Guide: https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue

		103 | resource "aws_sqs_queue" "test-queue" {
		104 |   name = "test-queue"
		105 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.main
	File: /main.tf:12-16
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		12 | resource "aws_vpc" "main" {
		13 |   cidr_block = local.cidr_block
		14 |   enable_dns_support = false
		15 |   enable_dns_hostnames = false
		16 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.main
	File: /main.tf:12-16
	Guide: https://docs.bridgecrew.io/docs/networking_4

		12 | resource "aws_vpc" "main" {
		13 |   cidr_block = local.cidr_block
		14 |   enable_dns_support = false
		15 |   enable_dns_hostnames = false
		16 | }


