
  Result 1

  [general-secrets-sensitive-in-attribute][CRITICAL] Block 'aws_db_instance.test' includes a potentially sensitive attribute which is defined within the project.
  /src/main.tf:120


     117 |   engine = "mysql"
     118 |   instance_class = "db.t2.small"
     119 |   username = "admin"
     120 |   password = "password123"    string: "password123"
     121 |   db_subnet_group_name = aws_db_subnet_group.db.name
     122 |   vpc_security_group_ids = [ aws_security_group.db.id]
     123 |   storage_type = "gp2"

  Legacy ID:  GEN003
  Impact:     Block attribute could be leaking secrets
  Resolution: Don't include sensitive data in blocks

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute 
  - https://www.terraform.io/docs/state/sensitive-data.html 

  Result 2

  [aws-autoscaling-no-public-ip][HIGH] Resource 'aws_instance.public_ins' has a public IP address associated.
  /src/main.tf:149


     146 | resource "aws_instance" "public_ins" {
     147 |   ami = "ami-0130bec6e5047f596"
     148 |   instance_type = "t3.nano"
     149 |   associate_public_ip_address = true    bool: true
     150 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
     151 |   subnet_id = aws_subnet.nondefault_1.id
     152 | }

  Legacy ID:  AWS012
  Impact:     The instance or configuration is publicly accessible
  Resolution: Set the instance to not be publicly accessible

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address 
  - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html 

  Result 3

  [aws-rds-backup-retention-specified][MEDIUM] Resource 'aws_db_instance.test' does not have backup retention explicitly set
  /src/main.tf:113-126


     110 |   }
     111 | }
     112 | 
     113 | resource "aws_db_instance" "test" {
     114 |   identifier = "tf-test-db"
     115 |   allocated_storage = "5"
     116 |   multi_az = "false"
     117 |   engine = "mysql"
     118 |   instance_class = "db.t2.small"
     119 |   username = "admin"
     120 |   password = "password123"
     121 |   db_subnet_group_name = aws_db_subnet_group.db.name
     122 |   vpc_security_group_ids = [ aws_security_group.db.id]
     123 |   storage_type = "gp2"
     124 |   skip_final_snapshot = true
     125 |   publicly_accessible = false
     126 | }
     127 | 
     128 | 
     129 | resource "aws_security_group" "publicly_accessible_sg" {

  Legacy ID:  AWS091
  Impact:     Potential loss of data and short opportunity for recovery
  Resolution: Explicitly set the retention period to greater than the default

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/backup-retention-specified 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period 
  - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention 

  Result 4

  [aws-vpc-no-public-egress-sg][CRITICAL] Resource 'aws_security_group.publicly_accessible_sg' defines a fully open egress security group.
  /src/main.tf:141


     138 |     from_port = 0
     139 |     protocol = "tcp"
     140 |     to_port = 65000
     141 |     cidr_blocks = ["0.0.0.0/0"]    list: ["0.0.0.0/0"]
     142 |   }
     143 | }
     144 | 

  Legacy ID:  AWS009
  Impact:     The port is exposed for egressing data to the internet
  Resolution: Set a more restrictive cidr range

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sg 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 

  Result 5

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.db' should include a description for auditing purposes.
  /src/main.tf:103-111


     100 | 
     101 | }
     102 | 
     103 | resource "aws_security_group" "db" {
     104 |   vpc_id = aws_vpc.nondefault.id
     105 |   ingress {
     106 |     from_port = 3306
     107 |     protocol = "tcp"
     108 |     to_port = 3306
     109 |     cidr_blocks = [aws_subnet.nondefault_1.cidr_block]
     110 |   }
     111 | }
     112 | 
     113 | resource "aws_db_instance" "test" {
     114 |   identifier = "tf-test-db"

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  Result 6

  [aws-vpc-no-public-ingress-sg][CRITICAL] Resource 'aws_security_group.publicly_accessible_sg' defines a fully open ingress security group.
  /src/main.tf:135


     132 |     from_port = 0
     133 |     protocol = "tcp"
     134 |     to_port = 65000
     135 |     cidr_blocks = ["0.0.0.0/0"]    list: ["0.0.0.0/0"]
     136 |   }
     137 |   egress {
     138 |     from_port = 0

  Legacy ID:  AWS008
  Impact:     The port is exposed for ingress from the internet
  Resolution: Set a more restrictive cidr range

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sg 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 

  Result 7

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.public_ins' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:146-152


     143 | }
     144 | 
     145 | // This instance is can potentially be used to hop into the DB
     146 | resource "aws_instance" "public_ins" {
     147 |   ami = "ami-0130bec6e5047f596"
     148 |   instance_type = "t3.nano"
     149 |   associate_public_ip_address = true
     150 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
     151 |   subnet_id = aws_subnet.nondefault_1.id
     152 | }

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 8

  [aws-rds-encrypt-instance-storage-data][HIGH] Resource 'aws_db_instance.test' has no storage encryption defined.
  /src/main.tf:113-126


     110 |   }
     111 | }
     112 | 
     113 | resource "aws_db_instance" "test" {
     114 |   identifier = "tf-test-db"
     115 |   allocated_storage = "5"
     116 |   multi_az = "false"
     117 |   engine = "mysql"
     118 |   instance_class = "db.t2.small"
     119 |   username = "admin"
     120 |   password = "password123"
     121 |   db_subnet_group_name = aws_db_subnet_group.db.name
     122 |   vpc_security_group_ids = [ aws_security_group.db.id]
     123 |   storage_type = "gp2"
     124 |   skip_final_snapshot = true
     125 |   publicly_accessible = false
     126 | }
     127 | 
     128 | 
     129 | resource "aws_security_group" "publicly_accessible_sg" {

  Legacy ID:  AWS052
  Impact:     Data can be read from RDS instances if compromised
  Resolution: Enable encryption for RDS instances

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance 
  - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html 

  Result 9

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.publicly_accessible_sg' should include a description for auditing purposes.
  /src/main.tf:129-143


     126 | }
     127 | 
     128 | 
     129 | resource "aws_security_group" "publicly_accessible_sg" {
     130 |   vpc_id = aws_vpc.nondefault.id
     131 |   ingress {
     132 |     from_port = 0
     133 |     protocol = "tcp"
     134 |     to_port = 65000
     135 |     cidr_blocks = ["0.0.0.0/0"]
     136 |   }
     137 |   egress {
     138 |     from_port = 0
     139 |     protocol = "tcp"
     140 |     to_port = 65000
     141 |     cidr_blocks = ["0.0.0.0/0"]
     142 |   }
     143 | }
     144 | 
     145 | // This instance is can potentially be used to hop into the DB
     146 | resource "aws_instance" "public_ins" {

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  times
  ------------------------------------------
  disk i/o             31.936168ms
  parsing HCL          617.834Âµs
  evaluating values    5.583209ms
  running checks       40.228958ms

  counts
  ------------------------------------------
  files loaded         1
  blocks               15
  modules              0

  results
  ------------------------------------------
  critical             3
  high                 3
  medium               1
  low                  2
  ignored              0

  9 potential problems detected.

