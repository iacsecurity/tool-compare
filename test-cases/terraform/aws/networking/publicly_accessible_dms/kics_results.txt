[38;2;34;187;51m
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    

[0m
Scanning with Keeping Infrastructure as Code Secure v1.6.5



Files scanned: 1
Parsed files: 1
Queries loaded: 1039
Queries failed to execute: 0

------------------------------------

[38;2;91;192;222mResource Not Using Tags[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 5
[1mDescription:[0m AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m67[0m

		066: 
[38;2;240;173;78m		067:   tags = {
[0m		068:     Name = "test"


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m50[0m

		049: 
[38;2;240;173;78m		050:   tags = {
[0m		051:     Name = "test"


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m12[0m

		011: 
[38;2;240;173;78m		012: resource "aws_iam_role" "dms-access-for-endpoint" {
[0m		013:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


	[38;2;91;192;222m[4]:[0m ../../src/main.tf:[38;2;34;187;51m22[0m

		021: 
[38;2;240;173;78m		022: resource "aws_iam_role" "dms-cloudwatch-logs-role" {
[0m		023:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


	[38;2;91;192;222m[5]:[0m ../../src/main.tf:[38;2;34;187;51m32[0m

		031: 
[38;2;240;173;78m		032: resource "aws_iam_role" "dms-vpc-role" {
[0m		033:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


[38;2;91;192;222mName Is Not Snake Case[0m, Severity: [38;2;91;192;222mINFO[0m, Results: 6
[1mDescription:[0m All names should follow snake case pattern.
[1mPlatform:[0m Terraform

	[38;2;91;192;222m[1]:[0m ../../src/main.tf:[38;2;34;187;51m37[0m

		036: 
[38;2;240;173;78m		037: resource "aws_iam_role_policy_attachment" "dms-vpc-role-AmazonDMSVPCManagementRole" {
[0m		038:   policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole"


	[38;2;91;192;222m[2]:[0m ../../src/main.tf:[38;2;34;187;51m17[0m

		016: 
[38;2;240;173;78m		017: resource "aws_iam_role_policy_attachment" "dms-access-for-endpoint-AmazonDMSRedshiftS3Role" {
[0m		018:   policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role"


	[38;2;91;192;222m[3]:[0m ../../src/main.tf:[38;2;34;187;51m22[0m

		021: 
[38;2;240;173;78m		022: resource "aws_iam_role" "dms-cloudwatch-logs-role" {
[0m		023:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


	[38;2;91;192;222m[4]:[0m ../../src/main.tf:[38;2;34;187;51m32[0m

		031: 
[38;2;240;173;78m		032: resource "aws_iam_role" "dms-vpc-role" {
[0m		033:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


	[38;2;91;192;222m[5]:[0m ../../src/main.tf:[38;2;34;187;51m12[0m

		011: 
[38;2;240;173;78m		012: resource "aws_iam_role" "dms-access-for-endpoint" {
[0m		013:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json


	[38;2;91;192;222m[6]:[0m ../../src/main.tf:[38;2;34;187;51m27[0m

		026: 
[38;2;240;173;78m		027: resource "aws_iam_role_policy_attachment" "dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole" {
[0m		028:   policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole"


[38;2;237;213;126mIAM Access Analyzer Not Enabled[0m, Severity: [38;2;237;213;126mLOW[0m, Results: 1
[1mDescription:[0m IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions
[1mPlatform:[0m Terraform

	[38;2;237;213;126m[1]:[0m ../../src/main.tf:[38;2;34;187;51m12[0m

		011: 
[38;2;240;173;78m		012: resource "aws_iam_role" "dms-access-for-endpoint" {
[0m		013:   assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json



Results Summary:
[38;2;187;33;36mHIGH[0m: 0
[38;2;255;114;19mMEDIUM[0m: 0
[38;2;237;213;126mLOW[0m: 1
[38;2;91;192;222mINFO[0m: 11
TOTAL: 12

Scan duration: 15.054520257s
