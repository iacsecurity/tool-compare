Failed to run the process ...
{
  "meta": {
    "isPrivate": true,
    "isLicensesEnabled": false,
    "ignoreSettings": null,
    "org": "ryder.d",
    "projectId": "",
    "policy": ""
  },
  "filesystemPolicy": false,
  "vulnerabilities": [],
  "dependencyCount": 0,
  "licensesPolicy": null,
  "ignoreSettings": null,
  "targetFile": "main.tf",
  "projectName": "project",
  "org": "ryder.d",
  "policy": "",
  "isPrivate": true,
  "targetFilePath": "/project/main.tf",
  "packageManager": "terraformconfig",
  "path": "/project",
  "projectType": "terraformconfig",
  "ok": false,
  "infrastructureAsCodeIssues": [
    {
      "severity": "medium",
      "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`",
      "id": "SNYK-CC-TF-41",
      "impact": "That potentially everyone can access your resource",
      "msg": "resource.aws_network_acl[ec2_nacl].ingress.cidr_block",
      "remediation": {
        "cloudformation": "Set `Properties.CidrBlock` or `Properties.Ipv6CidrBlock` attribute to specific IP range only, for example `192.168.0.0/24`",
        "terraform": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
      },
      "subType": "VPC",
      "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
      "publicId": "SNYK-CC-TF-41",
      "title": "AWS Network ACL allows public access",
      "references": [
        "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
      },
      "lineNumber": 31,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-41",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_network_acl[ec2_nacl]",
        "ingress",
        "cidr_block"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `root_block_device.encrypted` attribute to `true`",
      "id": "SNYK-CC-TF-53",
      "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
      "msg": "resource.aws_instance[public_ins].root_block_device.encrypted",
      "remediation": {
        "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
        "terraform": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "subType": "EC2",
      "issue": "The root block device for ec2 instance is not encrypted",
      "publicId": "SNYK-CC-TF-53",
      "title": "Non-Encrypted root block device",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
        "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "lineNumber": 131,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-53",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_instance[public_ins]",
        "root_block_device",
        "encrypted"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `encrypted` attribute to `true`.",
      "id": "SNYK-CC-TF-108",
      "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
      "msg": "resource.aws_redshift_cluster[test].encrypted",
      "remediation": {
        "cloudformation": "Set `Properties.Encrypted` attribute to `true`",
        "terraform": "Set `encrypted` attribute to `true`."
      },
      "subType": "Redshift",
      "issue": "Redshift DB is not encrypted",
      "publicId": "SNYK-CC-TF-108",
      "title": "Non-encrypted Redshift DB at rest",
      "references": [
        "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted",
        "https://docs.aws.amazon.com/redshift/latest/mgmt/security-server-side-encryption.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Redshift DB is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `encrypted` attribute to `true`."
      },
      "lineNumber": 103,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-108",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_redshift_cluster[test]",
        "encrypted"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `logging.enabled` attribute to `true`",
      "id": "SNYK-CC-TF-136",
      "impact": "Audit records may not be available during investigation",
      "msg": "resource.aws_redshift_cluster[test].logging",
      "remediation": {
        "cloudformation": "Set `Properties.LoggingProperties` attribute",
        "terraform": "Set `logging.enabled` attribute to `true`"
      },
      "subType": "Redshift",
      "issue": "Amazon Redshift cluster logging is not enabled",
      "publicId": "SNYK-CC-TF-136",
      "title": "Redshift cluster logging disabled",
      "references": [
        "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Amazon Redshift cluster logging is not enabled",
        "impact": "Audit records may not be available during investigation",
        "resolve": "Set `logging.enabled` attribute to `true`"
      },
      "lineNumber": 103,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-136",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_redshift_cluster[test]",
        "logging"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`",
      "id": "SNYK-CC-TF-41",
      "impact": "That potentially everyone can access your resource",
      "msg": "resource.aws_network_acl[redshift_eni2_nacl].ingress.cidr_block",
      "remediation": {
        "cloudformation": "Set `Properties.CidrBlock` or `Properties.Ipv6CidrBlock` attribute to specific IP range only, for example `192.168.0.0/24`",
        "terraform": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
      },
      "subType": "VPC",
      "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
      "publicId": "SNYK-CC-TF-41",
      "title": "AWS Network ACL allows public access",
      "references": [
        "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
      },
      "lineNumber": 58,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-41",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_network_acl[redshift_eni2_nacl]",
        "ingress",
        "cidr_block"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `associate_public_ip_address` attribute to `false`",
      "id": "SNYK-CC-TF-51",
      "impact": "Increases attack vector reachability",
      "msg": "resource.aws_instance[public_ins].associate_public_ip_address",
      "subType": "EC2",
      "issue": "AWS resource could be accessed externally via public IP",
      "publicId": "SNYK-CC-TF-51",
      "title": "Resource has public IP assigned",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
        "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "AWS resource could be accessed externally via public IP",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `associate_public_ip_address` attribute to `false`"
      },
      "lineNumber": 134,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-51",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_instance[public_ins]",
        "associate_public_ip_address"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
      "id": "SNYK-CC-TF-130",
      "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
      "msg": "resource.aws_instance[public_ins].metadata_options",
      "subType": "EC2",
      "issue": "Instance Metadata Service v2 is not enforced",
      "publicId": "SNYK-CC-TF-130",
      "title": "EC2 instance accepts IMDSv1",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
        "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
      },
      "lineNumber": 131,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-130",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_instance[public_ins]",
        "metadata_options"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `disable_api_termination` attribute  with value `true`",
      "id": "SNYK-CC-AWS-426",
      "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
      "msg": "resource.aws_instance[public_ins].disable_api_termination",
      "remediation": {
        "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
        "terraform": "Set `disable_api_termination` attribute  with value `true`"
      },
      "subType": "EC2",
      "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
      "publicId": "SNYK-CC-AWS-426",
      "title": "EC2 API termination protection is not enabled",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`"
      },
      "lineNumber": 131,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-AWS-426",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_instance[public_ins]",
        "disable_api_termination"
      ]
    },
    {
      "severity": "low",
      "id": "SNYK-CC-TF-73",
      "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
      "msg": "resource.aws_security_group[publicly_accessible_sg].egress",
      "remediation": {
        "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
      },
      "subType": "VPC",
      "issue": "The inline security group rule allows open egress",
      "publicId": "SNYK-CC-TF-73",
      "title": "AWS Security Group allows open egress",
      "references": [
        "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
        "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "The inline security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources"
      },
      "lineNumber": 122,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-73",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_security_group[publicly_accessible_sg]",
        "egress"
      ]
    },
    {
      "severity": "medium",
      "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
      "id": "SNYK-CC-TF-1",
      "impact": "That potentially everyone can access your resource",
      "msg": "input.resource.aws_security_group[publicly_accessible_sg].ingress",
      "remediation": {
        "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
      },
      "subType": "VPC",
      "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
      "publicId": "SNYK-CC-TF-1",
      "title": "Security Group allows open ingress",
      "references": [
        "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
      },
      "lineNumber": 116,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-1",
      "isGeneratedByCustomRule": false,
      "path": [
        "input",
        "resource",
        "aws_security_group[publicly_accessible_sg]",
        "ingress"
      ]
    },
    {
      "severity": "low",
      "resolve": "Set `description` attribute to meaningful statement",
      "id": "SNYK-CC-TF-56",
      "impact": "Increases the security management overhead",
      "msg": "resource.aws_security_group[publicly_accessible_sg].description",
      "subType": "VPC",
      "issue": "The description field is missing in the security group",
      "publicId": "SNYK-CC-TF-56",
      "title": "Missing description",
      "references": [
        "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
      ],
      "isIgnored": false,
      "iacDescription": {
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement"
      },
      "lineNumber": 114,
      "documentation": "https://snyk.io/security-rules/SNYK-CC-TF-56",
      "isGeneratedByCustomRule": false,
      "path": [
        "resource",
        "aws_security_group[publicly_accessible_sg]",
        "description"
      ]
    }
  ]
}
