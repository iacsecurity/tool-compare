
Result #1 CRITICAL Security group rule allows ingress from public internet. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:120
────────────────────────────────────────────────────────────────────────────────
  114    resource "aws_security_group" "publicly_accessible_sg" {
  ...  
  120  [     cidr_blocks = ["0.0.0.0/0"]
  ...  
  128    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-ingress-sgr
      Impact Your port exposed to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks
────────────────────────────────────────────────────────────────────────────────


Result #2 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:126
────────────────────────────────────────────────────────────────────────────────
  114    resource "aws_security_group" "publicly_accessible_sg" {
  ...  
  126  [     cidr_blocks = ["0.0.0.0/0"]
  ...  
  128    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────


Result #3 HIGH Cluster does not have encryption enabled. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:103-112
────────────────────────────────────────────────────────────────────────────────
  103    resource "aws_redshift_cluster" "test" {
  104      cluster_identifier = "redshift-defaults-only"
  105      node_type = "dc2.large"
  106      master_password = "Test1234"
  107      master_username = "test"
  108      skip_final_snapshot = true
  109      vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
  110      cluster_subnet_group_name = aws_redshift_subnet_group.nondefault.name
  111      publicly_accessible = false // Note that while the subnet itself has public access, the redshift is set NOT to have a public IP
  112    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-redshift-encryption-customer-key
      Impact Data may be leaked if infrastructure is compromised
  Resolution Enable encryption using CMK

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/redshift/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH Instance does not require IMDS access to require a token 
────────────────────────────────────────────────────────────────────────────────
  main.tf:131-137
────────────────────────────────────────────────────────────────────────────────
  131    resource "aws_instance" "public_ins" {
  132      ami = "ami-0130bec6e5047f596"
  133      instance_type = "t3.nano"
  134      associate_public_ip_address = true
  135      vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
  136      subnet_id = aws_subnet.nondefault_1.id
  137    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enforce-http-token-imds
      Impact Instance metadata service can be interacted with freely
  Resolution Enable HTTP token requirement for IMDS

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH Root block device is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:131-137
────────────────────────────────────────────────────────────────────────────────
  131    resource "aws_instance" "public_ins" {
  132      ami = "ami-0130bec6e5047f596"
  133      instance_type = "t3.nano"
  134      associate_public_ip_address = true
  135      vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
  136      subnet_id = aws_subnet.nondefault_1.id
  137    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enable-at-rest-encryption
      Impact The block device could be compromised and read from
  Resolution Turn on encryption for all block devices

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices
────────────────────────────────────────────────────────────────────────────────


Result #6 MEDIUM VPC Flow Logs is not enabled for VPC  
────────────────────────────────────────────────────────────────────────────────
  main.tf:10-12
────────────────────────────────────────────────────────────────────────────────
   10    resource "aws_vpc" "nondefault" {
   11      cidr_block = "10.1.1.0/24"
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-require-vpc-flow-logs-for-all-vpcs
      Impact Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.
  Resolution Enable flow logs for VPC

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/
────────────────────────────────────────────────────────────────────────────────


Result #7 LOW Security group explicitly uses the default description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:114-128
────────────────────────────────────────────────────────────────────────────────
  114  ┌ resource "aws_security_group" "publicly_accessible_sg" {
  115  │   vpc_id = aws_vpc.nondefault.id
  116  │   ingress {
  117  │     from_port = 0
  118  │     protocol = "tcp"
  119  │     to_port = 65000
  120  │     cidr_blocks = ["0.0.0.0/0"]
  121  │   }
  122  └   egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #8 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:116-121
────────────────────────────────────────────────────────────────────────────────
  114    resource "aws_security_group" "publicly_accessible_sg" {
  115      vpc_id = aws_vpc.nondefault.id
  116  ┌   ingress {
  117  │     from_port = 0
  118  │     protocol = "tcp"
  119  │     to_port = 65000
  120  │     cidr_blocks = ["0.0.0.0/0"]
  121  └   }
  122      egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #9 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:122-127
────────────────────────────────────────────────────────────────────────────────
  114    resource "aws_security_group" "publicly_accessible_sg" {
  115      vpc_id = aws_vpc.nondefault.id
  116      ingress {
  117        from_port = 0
  118        protocol = "tcp"
  119        to_port = 65000
  120        cidr_blocks = ["0.0.0.0/0"]
  121      }
  122  [   egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             3.97725ms
  parsing              1.212375ms
  adaptation           119.083µs
  checks               3.036334ms
  total                8.345042ms

  counts
  ──────────────────────────────────────────
  modules downloaded   0
  modules processed    1
  blocks processed     14
  files read           1

  results
  ──────────────────────────────────────────
  passed               6
  ignored              0
  critical             2
  high                 3
  medium               1
  low                  3

  6 passed, 9 potential problem(s) detected.

