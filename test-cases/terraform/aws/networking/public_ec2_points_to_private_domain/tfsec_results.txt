
  Result 1

  [aws-elastic-service-enable-domain-encryption][HIGH] Resource 'aws_elasticsearch_domain.test' defines an unencrypted Elasticsearch domain (missing encrypt_at_rest block).
  /src/main.tf:107-119


     104 |   description      = "Allows Amazon ES to manage AWS resources for a domain on your behalf."
     105 | }
     106 | 
     107 | resource "aws_elasticsearch_domain" "test" {
     108 |   domain_name = "test"
     109 |   vpc_options {
     110 |     subnet_ids = [aws_subnet.nondefault_1.id]
     111 |     security_group_ids = [aws_security_group.esdomain.id]
     112 |   }
     113 | 
     114 |   ebs_options {
     115 |     ebs_enabled = true
     116 |     volume_size = 10
     117 |     volume_type = "gp2"
     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id

  Legacy ID:  AWS031
  Impact:     Data will be readable if compromised
  Resolution: Enable ElasticSearch domain encryption

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-service/enable-domain-encryption 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest 
  - https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html 

  Result 2

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.esdomain' should include a description for auditing purposes.
  /src/main.tf:92-100


      89 |   subnet_id = aws_subnet.nondefault_1.id
      90 | }
      91 | 
      92 | resource "aws_security_group" "esdomain" {
      93 |   vpc_id = aws_vpc.nondefault.id
      94 |   ingress {
      95 |     from_port = 443
      96 |     protocol = "tcp"
      97 |     to_port = 443
      98 |     cidr_blocks = [aws_subnet.nondefault_1.cidr_block]
      99 |   }
     100 | }
     101 | 
     102 | resource "aws_iam_service_linked_role" "es" {
     103 |   aws_service_name = "es.amazonaws.com"

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  Result 3

  [aws-vpc-no-public-egress-sg][CRITICAL] Resource 'aws_security_group.publicly_accessible_sg' defines a fully open egress security group.
  /src/main.tf:133


     130 |     from_port = 0
     131 |     protocol = "tcp"
     132 |     to_port = 65000
     133 |     cidr_blocks = ["0.0.0.0/0"]    list: ["0.0.0.0/0"]
     134 |   }
     135 | }
     136 | 

  Legacy ID:  AWS009
  Impact:     The port is exposed for egressing data to the internet
  Resolution: Set a more restrictive cidr range

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sg 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 

  Result 4

  [aws-elastic-search-enforce-https][CRITICAL] Resource 'aws_elasticsearch_domain.test' defines an Elasticsearch domain with plaintext traffic (missing domain_endpoint_options block).
  /src/main.tf:107-119


     104 |   description      = "Allows Amazon ES to manage AWS resources for a domain on your behalf."
     105 | }
     106 | 
     107 | resource "aws_elasticsearch_domain" "test" {
     108 |   domain_name = "test"
     109 |   vpc_options {
     110 |     subnet_ids = [aws_subnet.nondefault_1.id]
     111 |     security_group_ids = [aws_security_group.esdomain.id]
     112 |   }
     113 | 
     114 |   ebs_options {
     115 |     ebs_enabled = true
     116 |     volume_size = 10
     117 |     volume_type = "gp2"
     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id

  Legacy ID:  AWS033
  Impact:     HTTP traffic can be intercepted and the contents read
  Resolution: Enforce the use of HTTPS for ElasticSearch

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https 
  - https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html 

  Result 5

  [aws-vpc-add-description-to-security-group][LOW] Resource 'aws_security_group.publicly_accessible_sg' should include a description for auditing purposes.
  /src/main.tf:121-135


     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id
     123 |   ingress {
     124 |     from_port = 0
     125 |     protocol = "tcp"
     126 |     to_port = 65000
     127 |     cidr_blocks = ["0.0.0.0/0"]
     128 |   }
     129 |   egress {
     130 |     from_port = 0
     131 |     protocol = "tcp"
     132 |     to_port = 65000
     133 |     cidr_blocks = ["0.0.0.0/0"]
     134 |   }
     135 | }
     136 | 
     137 | // This instance is can potentially be used to hop into the DB
     138 | resource "aws_instance" "public_ins" {

  Legacy ID:  AWS018
  Impact:     Descriptions provide context for the firewall rule reasons
  Resolution: Add descriptions for all security groups and rules

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule 
  - https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html 

  Result 6

  [aws-vpc-no-public-ingress-sg][CRITICAL] Resource 'aws_security_group.publicly_accessible_sg' defines a fully open ingress security group.
  /src/main.tf:127


     124 |     from_port = 0
     125 |     protocol = "tcp"
     126 |     to_port = 65000
     127 |     cidr_blocks = ["0.0.0.0/0"]    list: ["0.0.0.0/0"]
     128 |   }
     129 |   egress {
     130 |     from_port = 0

  Legacy ID:  AWS008
  Impact:     The port is exposed for ingress from the internet
  Resolution: Set a more restrictive cidr range

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sg 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group 

  Result 7

  [aws-autoscaling-no-public-ip][HIGH] Resource 'aws_instance.public_ins' has a public IP address associated.
  /src/main.tf:141


     138 | resource "aws_instance" "public_ins" {
     139 |   ami = "ami-0130bec6e5047f596"
     140 |   instance_type = "t3.nano"
     141 |   associate_public_ip_address = true    bool: true
     142 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
     143 |   subnet_id = aws_subnet.nondefault_1.id
     144 | }

  Legacy ID:  AWS012
  Impact:     The instance or configuration is publicly accessible
  Resolution: Set the instance to not be publicly accessible

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address 
  - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html 

  Result 8

  [aws-ec2-enforce-http-token-imds][HIGH] Resource 'aws_instance.public_ins' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.
  /src/main.tf:138-144


     135 | }
     136 | 
     137 | // This instance is can potentially be used to hop into the DB
     138 | resource "aws_instance" "public_ins" {
     139 |   ami = "ami-0130bec6e5047f596"
     140 |   instance_type = "t3.nano"
     141 |   associate_public_ip_address = true
     142 |   vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
     143 |   subnet_id = aws_subnet.nondefault_1.id
     144 | }

  Legacy ID:  AWS079
  Impact:     Instance metadata service can be interacted with freely
  Resolution: Enable HTTP token requirement for IMDS

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options 
  - https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service 

  Result 9

  [aws-elastic-search-enable-domain-logging][MEDIUM] Resource 'aws_elasticsearch_domain.test' does not configure logging at rest on the domain.
  /src/main.tf:107-119


     104 |   description      = "Allows Amazon ES to manage AWS resources for a domain on your behalf."
     105 | }
     106 | 
     107 | resource "aws_elasticsearch_domain" "test" {
     108 |   domain_name = "test"
     109 |   vpc_options {
     110 |     subnet_ids = [aws_subnet.nondefault_1.id]
     111 |     security_group_ids = [aws_security_group.esdomain.id]
     112 |   }
     113 | 
     114 |   ebs_options {
     115 |     ebs_enabled = true
     116 |     volume_size = 10
     117 |     volume_type = "gp2"
     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id

  Legacy ID:  AWS057
  Impact:     Logging provides vital information about access and usage
  Resolution: Enable logging for ElasticSearch domains

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type 
  - https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html 

  Result 10

  [aws-elastic-search-enable-in-transit-encryption][HIGH] Resource 'aws_elasticsearch_domain.test' defines an Elasticsearch domain with plaintext traffic (missing node_to_node_encryption block).
  /src/main.tf:107-119


     104 |   description      = "Allows Amazon ES to manage AWS resources for a domain on your behalf."
     105 | }
     106 | 
     107 | resource "aws_elasticsearch_domain" "test" {
     108 |   domain_name = "test"
     109 |   vpc_options {
     110 |     subnet_ids = [aws_subnet.nondefault_1.id]
     111 |     security_group_ids = [aws_security_group.esdomain.id]
     112 |   }
     113 | 
     114 |   ebs_options {
     115 |     ebs_enabled = true
     116 |     volume_size = 10
     117 |     volume_type = "gp2"
     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id

  Legacy ID:  AWS032
  Impact:     In transit data between nodes could be read if intercepted
  Resolution: Enable encrypted node to node communication

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest 
  - https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html 

  Result 11

  [aws-elastic-search-enable-logging][MEDIUM] Resource 'aws_elasticsearch_domain.test' is missing 'AUDIT_LOGS` in one of the `log_publishing_options`-`log_type` attributes so audit log is not enabled
  /src/main.tf:107-119


     104 |   description      = "Allows Amazon ES to manage AWS resources for a domain on your behalf."
     105 | }
     106 | 
     107 | resource "aws_elasticsearch_domain" "test" {
     108 |   domain_name = "test"
     109 |   vpc_options {
     110 |     subnet_ids = [aws_subnet.nondefault_1.id]
     111 |     security_group_ids = [aws_security_group.esdomain.id]
     112 |   }
     113 | 
     114 |   ebs_options {
     115 |     ebs_enabled = true
     116 |     volume_size = 10
     117 |     volume_type = "gp2"
     118 |   }
     119 | }
     120 | 
     121 | resource "aws_security_group" "publicly_accessible_sg" {
     122 |   vpc_id = aws_vpc.nondefault.id

  Legacy ID:  AWS070
  Impact:     Logging provides vital information about access and usage
  Resolution: Enable logging for ElasticSearch domains

  More Info:
  - https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-logging 
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_publishing_options 

  times
  ------------------------------------------
  disk i/o             32.789416ms
  parsing HCL          580.5µs
  evaluating values    4.943541ms
  running checks       40.5705ms

  counts
  ------------------------------------------
  files loaded         1
  blocks               14
  modules              0

  results
  ------------------------------------------
  critical             3
  high                 4
  medium               2
  low                  2
  ignored              0

  11 potential problems detected.

