
Result #1 CRITICAL Domain does not enforce HTTPS. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:107-119
────────────────────────────────────────────────────────────────────────────────
  107  ┌ resource "aws_elasticsearch_domain" "test" {
  108  │   domain_name = "test"
  109  │   vpc_options {
  110  │     subnet_ids = [aws_subnet.nondefault_1.id]
  111  │     security_group_ids = [aws_security_group.esdomain.id]
  112  │   }
  113  │ 
  114  │   ebs_options {
  115  └     ebs_enabled = true
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-elastic-search-enforce-https
      Impact HTTP traffic can be intercepted and the contents read
  Resolution Enforce the use of HTTPS for ElasticSearch

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enforce-https/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https
────────────────────────────────────────────────────────────────────────────────


Result #2 CRITICAL Security group rule allows ingress from public internet. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:127
────────────────────────────────────────────────────────────────────────────────
  121    resource "aws_security_group" "publicly_accessible_sg" {
  ...  
  127  [     cidr_blocks = ["0.0.0.0/0"]
  ...  
  135    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-ingress-sgr
      Impact Your port exposed to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks
────────────────────────────────────────────────────────────────────────────────


Result #3 CRITICAL Security group rule allows egress to multiple public internet addresses. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:133
────────────────────────────────────────────────────────────────────────────────
  121    resource "aws_security_group" "publicly_accessible_sg" {
  ...  
  133  [     cidr_blocks = ["0.0.0.0/0"]
  ...  
  135    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-no-public-egress-sgr
      Impact Your port is egressing data to the internet
  Resolution Set a more restrictive cidr range

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
────────────────────────────────────────────────────────────────────────────────


Result #4 HIGH Domain does not have in-transit encryption enabled. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:107-119
────────────────────────────────────────────────────────────────────────────────
  107  ┌ resource "aws_elasticsearch_domain" "test" {
  108  │   domain_name = "test"
  109  │   vpc_options {
  110  │     subnet_ids = [aws_subnet.nondefault_1.id]
  111  │     security_group_ids = [aws_security_group.esdomain.id]
  112  │   }
  113  │ 
  114  │   ebs_options {
  115  └     ebs_enabled = true
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-elastic-search-enable-in-transit-encryption
      Impact In transit data between nodes could be read if intercepted
  Resolution Enable encrypted node to node communication

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-in-transit-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH Domain does not have at-rest encryption enabled. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:107-119
────────────────────────────────────────────────────────────────────────────────
  107  ┌ resource "aws_elasticsearch_domain" "test" {
  108  │   domain_name = "test"
  109  │   vpc_options {
  110  │     subnet_ids = [aws_subnet.nondefault_1.id]
  111  │     security_group_ids = [aws_security_group.esdomain.id]
  112  │   }
  113  │ 
  114  │   ebs_options {
  115  └     ebs_enabled = true
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-elastic-search-enable-domain-encryption
      Impact Data will be readable if compromised
  Resolution Enable ElasticSearch domain encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest
────────────────────────────────────────────────────────────────────────────────


Result #6 HIGH Domain does not have a secure TLS policy. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:107-119
────────────────────────────────────────────────────────────────────────────────
  107  ┌ resource "aws_elasticsearch_domain" "test" {
  108  │   domain_name = "test"
  109  │   vpc_options {
  110  │     subnet_ids = [aws_subnet.nondefault_1.id]
  111  │     security_group_ids = [aws_security_group.esdomain.id]
  112  │   }
  113  │ 
  114  │   ebs_options {
  115  └     ebs_enabled = true
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-elastic-search-use-secure-tls-policy
      Impact Outdated SSL policies increase exposure to known vulnerabilities
  Resolution Use the most modern TLS/SSL policies available

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/use-secure-tls-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy
────────────────────────────────────────────────────────────────────────────────


Result #7 HIGH Instance does not require IMDS access to require a token 
────────────────────────────────────────────────────────────────────────────────
  main.tf:138-144
────────────────────────────────────────────────────────────────────────────────
  138    resource "aws_instance" "public_ins" {
  139      ami = "ami-0130bec6e5047f596"
  140      instance_type = "t3.nano"
  141      associate_public_ip_address = true
  142      vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
  143      subnet_id = aws_subnet.nondefault_1.id
  144    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enforce-http-token-imds
      Impact Instance metadata service can be interacted with freely
  Resolution Enable HTTP token requirement for IMDS

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options
────────────────────────────────────────────────────────────────────────────────


Result #8 HIGH Root block device is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:138-144
────────────────────────────────────────────────────────────────────────────────
  138    resource "aws_instance" "public_ins" {
  139      ami = "ami-0130bec6e5047f596"
  140      instance_type = "t3.nano"
  141      associate_public_ip_address = true
  142      vpc_security_group_ids = [aws_security_group.publicly_accessible_sg.id]
  143      subnet_id = aws_subnet.nondefault_1.id
  144    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-enable-at-rest-encryption
      Impact The block device could be compromised and read from
  Resolution Turn on encryption for all block devices

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices
────────────────────────────────────────────────────────────────────────────────


Result #9 MEDIUM Domain audit logging is not enabled. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:107-119
────────────────────────────────────────────────────────────────────────────────
  107  ┌ resource "aws_elasticsearch_domain" "test" {
  108  │   domain_name = "test"
  109  │   vpc_options {
  110  │     subnet_ids = [aws_subnet.nondefault_1.id]
  111  │     security_group_ids = [aws_security_group.esdomain.id]
  112  │   }
  113  │ 
  114  │   ebs_options {
  115  └     ebs_enabled = true
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-elastic-search-enable-domain-logging
      Impact Logging provides vital information about access and usage
  Resolution Enable logging for ElasticSearch domains

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elastic-search/enable-domain-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type
────────────────────────────────────────────────────────────────────────────────


Result #10 MEDIUM VPC Flow Logs is not enabled for VPC  
────────────────────────────────────────────────────────────────────────────────
  main.tf:5-7
────────────────────────────────────────────────────────────────────────────────
    5    resource "aws_vpc" "nondefault" {
    6      cidr_block = "10.1.1.0/24"
    7    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-require-vpc-flow-logs-for-all-vpcs
      Impact Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.
  Resolution Enable flow logs for VPC

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/
────────────────────────────────────────────────────────────────────────────────


Result #11 LOW Security group explicitly uses the default description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:121-135
────────────────────────────────────────────────────────────────────────────────
  121  ┌ resource "aws_security_group" "publicly_accessible_sg" {
  122  │   vpc_id = aws_vpc.nondefault.id
  123  │   ingress {
  124  │     from_port = 0
  125  │     protocol = "tcp"
  126  │     to_port = 65000
  127  │     cidr_blocks = ["0.0.0.0/0"]
  128  │   }
  129  └   egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #12 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:123-128
────────────────────────────────────────────────────────────────────────────────
  121    resource "aws_security_group" "publicly_accessible_sg" {
  122      vpc_id = aws_vpc.nondefault.id
  123  ┌   ingress {
  124  │     from_port = 0
  125  │     protocol = "tcp"
  126  │     to_port = 65000
  127  │     cidr_blocks = ["0.0.0.0/0"]
  128  └   }
  129      egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #13 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:129-134
────────────────────────────────────────────────────────────────────────────────
  121    resource "aws_security_group" "publicly_accessible_sg" {
  122      vpc_id = aws_vpc.nondefault.id
  123      ingress {
  124        from_port = 0
  125        protocol = "tcp"
  126        to_port = 65000
  127        cidr_blocks = ["0.0.0.0/0"]
  128      }
  129  [   egress {
  ...  
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #14 LOW Security group explicitly uses the default description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:92-100
────────────────────────────────────────────────────────────────────────────────
   92    resource "aws_security_group" "esdomain" {
   93      vpc_id = aws_vpc.nondefault.id
   94      ingress {
   95        from_port = 443
   96        protocol = "tcp"
   97        to_port = 443
   98        cidr_blocks = [aws_subnet.nondefault_1.cidr_block]
   99      }
  100    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


Result #15 LOW Security group rule does not have a description. 
────────────────────────────────────────────────────────────────────────────────
  main.tf:94-99
────────────────────────────────────────────────────────────────────────────────
   92    resource "aws_security_group" "esdomain" {
   93      vpc_id = aws_vpc.nondefault.id
   94  ┌   ingress {
   95  │     from_port = 443
   96  │     protocol = "tcp"
   97  │     to_port = 443
   98  │     cidr_blocks = [aws_subnet.nondefault_1.cidr_block]
   99  └   }
  100    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-ec2-add-description-to-security-group-rule
      Impact Descriptions provide context for the firewall rule reasons
  Resolution Add descriptions for all security groups rules

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             3.854583ms
  parsing              974.459µs
  adaptation           75.25µs
  checks               7.462458ms
  total                12.36675ms

  counts
  ──────────────────────────────────────────
  modules downloaded   0
  modules processed    1
  blocks processed     14
  files read           1

  results
  ──────────────────────────────────────────
  passed               6
  ignored              0
  critical             3
  high                 5
  medium               2
  low                  5

  6 passed, 15 potential problem(s) detected.

